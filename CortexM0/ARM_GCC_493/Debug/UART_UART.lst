ARM GAS  C:\Users\owono\AppData\Local\Temp\cc0srShD.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"UART_UART.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.UART_UartInit,"ax",%progbits
  18              		.align	2
  19              		.global	UART_UartInit
  20              		.code	16
  21              		.thumb_func
  22              		.type	UART_UartInit, %function
  23              	UART_UartInit:
  24              	.LFB2:
  25              		.file 1 ".\\Generated_Source\\PSoC4\\UART_UART.c"
   1:.\Generated_Source\PSoC4/UART_UART.c **** /***************************************************************************//**
   2:.\Generated_Source\PSoC4/UART_UART.c **** * \file UART_UART.c
   3:.\Generated_Source\PSoC4/UART_UART.c **** * \version 3.20
   4:.\Generated_Source\PSoC4/UART_UART.c **** *
   5:.\Generated_Source\PSoC4/UART_UART.c **** * \brief
   6:.\Generated_Source\PSoC4/UART_UART.c **** *  This file provides the source code to the API for the SCB Component in
   7:.\Generated_Source\PSoC4/UART_UART.c **** *  UART mode.
   8:.\Generated_Source\PSoC4/UART_UART.c **** *
   9:.\Generated_Source\PSoC4/UART_UART.c **** * Note:
  10:.\Generated_Source\PSoC4/UART_UART.c **** *
  11:.\Generated_Source\PSoC4/UART_UART.c **** *******************************************************************************
  12:.\Generated_Source\PSoC4/UART_UART.c **** * \copyright
  13:.\Generated_Source\PSoC4/UART_UART.c **** * Copyright 2013-2016, Cypress Semiconductor Corporation.  All rights reserved.
  14:.\Generated_Source\PSoC4/UART_UART.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:.\Generated_Source\PSoC4/UART_UART.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:.\Generated_Source\PSoC4/UART_UART.c **** * the software package with which this file was provided.
  17:.\Generated_Source\PSoC4/UART_UART.c **** *******************************************************************************/
  18:.\Generated_Source\PSoC4/UART_UART.c **** 
  19:.\Generated_Source\PSoC4/UART_UART.c **** #include "UART_PVT.h"
  20:.\Generated_Source\PSoC4/UART_UART.c **** #include "UART_SPI_UART_PVT.h"
  21:.\Generated_Source\PSoC4/UART_UART.c **** 
  22:.\Generated_Source\PSoC4/UART_UART.c **** 
  23:.\Generated_Source\PSoC4/UART_UART.c **** #if (UART_UART_WAKE_ENABLE_CONST && UART_UART_RX_WAKEUP_IRQ)
  24:.\Generated_Source\PSoC4/UART_UART.c ****     /**
  25:.\Generated_Source\PSoC4/UART_UART.c ****     * \addtogroup group_globals
  26:.\Generated_Source\PSoC4/UART_UART.c ****     * \{
  27:.\Generated_Source\PSoC4/UART_UART.c ****     */
  28:.\Generated_Source\PSoC4/UART_UART.c ****     /** This global variable determines whether to enable Skip Start
  29:.\Generated_Source\PSoC4/UART_UART.c ****     * functionality when UART_Sleep() function is called:
  30:.\Generated_Source\PSoC4/UART_UART.c ****     * 0 – disable, other values – enable. Default value is 1.
  31:.\Generated_Source\PSoC4/UART_UART.c ****     * It is only available when Enable wakeup from Deep Sleep Mode is enabled.
  32:.\Generated_Source\PSoC4/UART_UART.c ****     */
ARM GAS  C:\Users\owono\AppData\Local\Temp\cc0srShD.s 			page 2


  33:.\Generated_Source\PSoC4/UART_UART.c ****     uint8 UART_skipStart = 1u;
  34:.\Generated_Source\PSoC4/UART_UART.c ****     /** \} globals */
  35:.\Generated_Source\PSoC4/UART_UART.c **** #endif /* (UART_UART_WAKE_ENABLE_CONST && UART_UART_RX_WAKEUP_IRQ) */
  36:.\Generated_Source\PSoC4/UART_UART.c **** 
  37:.\Generated_Source\PSoC4/UART_UART.c **** #if(UART_SCB_MODE_UNCONFIG_CONST_CFG)
  38:.\Generated_Source\PSoC4/UART_UART.c **** 
  39:.\Generated_Source\PSoC4/UART_UART.c ****     /***************************************
  40:.\Generated_Source\PSoC4/UART_UART.c ****     *  Configuration Structure Initialization
  41:.\Generated_Source\PSoC4/UART_UART.c ****     ***************************************/
  42:.\Generated_Source\PSoC4/UART_UART.c **** 
  43:.\Generated_Source\PSoC4/UART_UART.c ****     const UART_UART_INIT_STRUCT UART_configUart =
  44:.\Generated_Source\PSoC4/UART_UART.c ****     {
  45:.\Generated_Source\PSoC4/UART_UART.c ****         UART_UART_SUB_MODE,
  46:.\Generated_Source\PSoC4/UART_UART.c ****         UART_UART_DIRECTION,
  47:.\Generated_Source\PSoC4/UART_UART.c ****         UART_UART_DATA_BITS_NUM,
  48:.\Generated_Source\PSoC4/UART_UART.c ****         UART_UART_PARITY_TYPE,
  49:.\Generated_Source\PSoC4/UART_UART.c ****         UART_UART_STOP_BITS_NUM,
  50:.\Generated_Source\PSoC4/UART_UART.c ****         UART_UART_OVS_FACTOR,
  51:.\Generated_Source\PSoC4/UART_UART.c ****         UART_UART_IRDA_LOW_POWER,
  52:.\Generated_Source\PSoC4/UART_UART.c ****         UART_UART_MEDIAN_FILTER_ENABLE,
  53:.\Generated_Source\PSoC4/UART_UART.c ****         UART_UART_RETRY_ON_NACK,
  54:.\Generated_Source\PSoC4/UART_UART.c ****         UART_UART_IRDA_POLARITY,
  55:.\Generated_Source\PSoC4/UART_UART.c ****         UART_UART_DROP_ON_PARITY_ERR,
  56:.\Generated_Source\PSoC4/UART_UART.c ****         UART_UART_DROP_ON_FRAME_ERR,
  57:.\Generated_Source\PSoC4/UART_UART.c ****         UART_UART_WAKE_ENABLE,
  58:.\Generated_Source\PSoC4/UART_UART.c ****         0u,
  59:.\Generated_Source\PSoC4/UART_UART.c ****         NULL,
  60:.\Generated_Source\PSoC4/UART_UART.c ****         0u,
  61:.\Generated_Source\PSoC4/UART_UART.c ****         NULL,
  62:.\Generated_Source\PSoC4/UART_UART.c ****         UART_UART_MP_MODE_ENABLE,
  63:.\Generated_Source\PSoC4/UART_UART.c ****         UART_UART_MP_ACCEPT_ADDRESS,
  64:.\Generated_Source\PSoC4/UART_UART.c ****         UART_UART_MP_RX_ADDRESS,
  65:.\Generated_Source\PSoC4/UART_UART.c ****         UART_UART_MP_RX_ADDRESS_MASK,
  66:.\Generated_Source\PSoC4/UART_UART.c ****         (uint32) UART_SCB_IRQ_INTERNAL,
  67:.\Generated_Source\PSoC4/UART_UART.c ****         UART_UART_INTR_RX_MASK,
  68:.\Generated_Source\PSoC4/UART_UART.c ****         UART_UART_RX_TRIGGER_LEVEL,
  69:.\Generated_Source\PSoC4/UART_UART.c ****         UART_UART_INTR_TX_MASK,
  70:.\Generated_Source\PSoC4/UART_UART.c ****         UART_UART_TX_TRIGGER_LEVEL,
  71:.\Generated_Source\PSoC4/UART_UART.c ****         (uint8) UART_UART_BYTE_MODE_ENABLE,
  72:.\Generated_Source\PSoC4/UART_UART.c ****         (uint8) UART_UART_CTS_ENABLE,
  73:.\Generated_Source\PSoC4/UART_UART.c ****         (uint8) UART_UART_CTS_POLARITY,
  74:.\Generated_Source\PSoC4/UART_UART.c ****         (uint8) UART_UART_RTS_POLARITY,
  75:.\Generated_Source\PSoC4/UART_UART.c ****         (uint8) UART_UART_RTS_FIFO_LEVEL
  76:.\Generated_Source\PSoC4/UART_UART.c ****     };
  77:.\Generated_Source\PSoC4/UART_UART.c **** 
  78:.\Generated_Source\PSoC4/UART_UART.c **** 
  79:.\Generated_Source\PSoC4/UART_UART.c ****     /*******************************************************************************
  80:.\Generated_Source\PSoC4/UART_UART.c ****     * Function Name: UART_UartInit
  81:.\Generated_Source\PSoC4/UART_UART.c ****     ****************************************************************************//**
  82:.\Generated_Source\PSoC4/UART_UART.c ****     *
  83:.\Generated_Source\PSoC4/UART_UART.c ****     *  Configures the UART for UART operation.
  84:.\Generated_Source\PSoC4/UART_UART.c ****     *
  85:.\Generated_Source\PSoC4/UART_UART.c ****     *  This function is intended specifically to be used when the UART
  86:.\Generated_Source\PSoC4/UART_UART.c ****     *  configuration is set to “Unconfigured UART” in the customizer.
  87:.\Generated_Source\PSoC4/UART_UART.c ****     *  After initializing the UART in UART mode using this function,
  88:.\Generated_Source\PSoC4/UART_UART.c ****     *  the component can be enabled using the UART_Start() or
  89:.\Generated_Source\PSoC4/UART_UART.c ****     * UART_Enable() function.
ARM GAS  C:\Users\owono\AppData\Local\Temp\cc0srShD.s 			page 3


  90:.\Generated_Source\PSoC4/UART_UART.c ****     *  This function uses a pointer to a structure that provides the configuration
  91:.\Generated_Source\PSoC4/UART_UART.c ****     *  settings. This structure contains the same information that would otherwise
  92:.\Generated_Source\PSoC4/UART_UART.c ****     *  be provided by the customizer settings.
  93:.\Generated_Source\PSoC4/UART_UART.c ****     *
  94:.\Generated_Source\PSoC4/UART_UART.c ****     *  \param config: pointer to a structure that contains the following list of
  95:.\Generated_Source\PSoC4/UART_UART.c ****     *   fields. These fields match the selections available in the customizer.
  96:.\Generated_Source\PSoC4/UART_UART.c ****     *   Refer to the customizer for further description of the settings.
  97:.\Generated_Source\PSoC4/UART_UART.c ****     *
  98:.\Generated_Source\PSoC4/UART_UART.c ****     *******************************************************************************/
  99:.\Generated_Source\PSoC4/UART_UART.c ****     void UART_UartInit(const UART_UART_INIT_STRUCT *config)
 100:.\Generated_Source\PSoC4/UART_UART.c ****     {
 101:.\Generated_Source\PSoC4/UART_UART.c ****         uint32 pinsConfig;
 102:.\Generated_Source\PSoC4/UART_UART.c **** 
 103:.\Generated_Source\PSoC4/UART_UART.c ****         if (NULL == config)
 104:.\Generated_Source\PSoC4/UART_UART.c ****         {
 105:.\Generated_Source\PSoC4/UART_UART.c ****             CYASSERT(0u != 0u); /* Halt execution due to bad function parameter */
 106:.\Generated_Source\PSoC4/UART_UART.c ****         }
 107:.\Generated_Source\PSoC4/UART_UART.c ****         else
 108:.\Generated_Source\PSoC4/UART_UART.c ****         {
 109:.\Generated_Source\PSoC4/UART_UART.c ****             /* Get direction to configure UART pins: TX, RX or TX+RX */
 110:.\Generated_Source\PSoC4/UART_UART.c ****             pinsConfig  = config->direction;
 111:.\Generated_Source\PSoC4/UART_UART.c **** 
 112:.\Generated_Source\PSoC4/UART_UART.c ****         #if !(UART_CY_SCBIP_V0 || UART_CY_SCBIP_V1)
 113:.\Generated_Source\PSoC4/UART_UART.c ****             /* Add RTS and CTS pins to configure */
 114:.\Generated_Source\PSoC4/UART_UART.c ****             pinsConfig |= (0u != config->rtsRxFifoLevel) ? (UART_UART_RTS_PIN_ENABLE) : (0u);
 115:.\Generated_Source\PSoC4/UART_UART.c ****             pinsConfig |= (0u != config->enableCts)      ? (UART_UART_CTS_PIN_ENABLE) : (0u);
 116:.\Generated_Source\PSoC4/UART_UART.c ****         #endif /* !(UART_CY_SCBIP_V0 || UART_CY_SCBIP_V1) */
 117:.\Generated_Source\PSoC4/UART_UART.c **** 
 118:.\Generated_Source\PSoC4/UART_UART.c ****             /* Configure pins */
 119:.\Generated_Source\PSoC4/UART_UART.c ****             UART_SetPins(UART_SCB_MODE_UART, config->mode, pinsConfig);
 120:.\Generated_Source\PSoC4/UART_UART.c **** 
 121:.\Generated_Source\PSoC4/UART_UART.c ****             /* Store internal configuration */
 122:.\Generated_Source\PSoC4/UART_UART.c ****             UART_scbMode       = (uint8) UART_SCB_MODE_UART;
 123:.\Generated_Source\PSoC4/UART_UART.c ****             UART_scbEnableWake = (uint8) config->enableWake;
 124:.\Generated_Source\PSoC4/UART_UART.c ****             UART_scbEnableIntr = (uint8) config->enableInterrupt;
 125:.\Generated_Source\PSoC4/UART_UART.c **** 
 126:.\Generated_Source\PSoC4/UART_UART.c ****             /* Set RX direction internal variables */
 127:.\Generated_Source\PSoC4/UART_UART.c ****             UART_rxBuffer      =         config->rxBuffer;
 128:.\Generated_Source\PSoC4/UART_UART.c ****             UART_rxDataBits    = (uint8) config->dataBits;
 129:.\Generated_Source\PSoC4/UART_UART.c ****             UART_rxBufferSize  = (uint8) config->rxBufferSize;
 130:.\Generated_Source\PSoC4/UART_UART.c **** 
 131:.\Generated_Source\PSoC4/UART_UART.c ****             /* Set TX direction internal variables */
 132:.\Generated_Source\PSoC4/UART_UART.c ****             UART_txBuffer      =         config->txBuffer;
 133:.\Generated_Source\PSoC4/UART_UART.c ****             UART_txDataBits    = (uint8) config->dataBits;
 134:.\Generated_Source\PSoC4/UART_UART.c ****             UART_txBufferSize  = (uint8) config->txBufferSize;
 135:.\Generated_Source\PSoC4/UART_UART.c **** 
 136:.\Generated_Source\PSoC4/UART_UART.c ****             /* Configure UART interface */
 137:.\Generated_Source\PSoC4/UART_UART.c ****             if(UART_UART_MODE_IRDA == config->mode)
 138:.\Generated_Source\PSoC4/UART_UART.c ****             {
 139:.\Generated_Source\PSoC4/UART_UART.c ****                 /* OVS settings: IrDA */
 140:.\Generated_Source\PSoC4/UART_UART.c ****                 UART_CTRL_REG  = ((0u != config->enableIrdaLowPower) ?
 141:.\Generated_Source\PSoC4/UART_UART.c ****                                                 (UART_UART_GET_CTRL_OVS_IRDA_LP(config->oversample)
 142:.\Generated_Source\PSoC4/UART_UART.c ****                                                 (UART_CTRL_OVS_IRDA_OVS16));
 143:.\Generated_Source\PSoC4/UART_UART.c ****             }
 144:.\Generated_Source\PSoC4/UART_UART.c ****             else
 145:.\Generated_Source\PSoC4/UART_UART.c ****             {
 146:.\Generated_Source\PSoC4/UART_UART.c ****                 /* OVS settings: UART and SmartCard */
ARM GAS  C:\Users\owono\AppData\Local\Temp\cc0srShD.s 			page 4


 147:.\Generated_Source\PSoC4/UART_UART.c ****                 UART_CTRL_REG  = UART_GET_CTRL_OVS(config->oversample);
 148:.\Generated_Source\PSoC4/UART_UART.c ****             }
 149:.\Generated_Source\PSoC4/UART_UART.c **** 
 150:.\Generated_Source\PSoC4/UART_UART.c ****             UART_CTRL_REG     |= UART_GET_CTRL_BYTE_MODE  (config->enableByteMode)      |
 151:.\Generated_Source\PSoC4/UART_UART.c ****                                              UART_GET_CTRL_ADDR_ACCEPT(config->multiprocAcceptAddr)
 152:.\Generated_Source\PSoC4/UART_UART.c ****                                              UART_CTRL_UART;
 153:.\Generated_Source\PSoC4/UART_UART.c **** 
 154:.\Generated_Source\PSoC4/UART_UART.c ****             /* Configure sub-mode: UART, SmartCard or IrDA */
 155:.\Generated_Source\PSoC4/UART_UART.c ****             UART_UART_CTRL_REG = UART_GET_UART_CTRL_MODE(config->mode);
 156:.\Generated_Source\PSoC4/UART_UART.c **** 
 157:.\Generated_Source\PSoC4/UART_UART.c ****             /* Configure RX direction */
 158:.\Generated_Source\PSoC4/UART_UART.c ****             UART_UART_RX_CTRL_REG = UART_GET_UART_RX_CTRL_MODE(config->stopBits)              |
 159:.\Generated_Source\PSoC4/UART_UART.c ****                                         UART_GET_UART_RX_CTRL_POLARITY(config->enableInvertedRx)   
 160:.\Generated_Source\PSoC4/UART_UART.c ****                                         UART_GET_UART_RX_CTRL_MP_MODE(config->enableMultiproc)     
 161:.\Generated_Source\PSoC4/UART_UART.c ****                                         UART_GET_UART_RX_CTRL_DROP_ON_PARITY_ERR(config->dropOnPari
 162:.\Generated_Source\PSoC4/UART_UART.c ****                                         UART_GET_UART_RX_CTRL_DROP_ON_FRAME_ERR(config->dropOnFrame
 163:.\Generated_Source\PSoC4/UART_UART.c **** 
 164:.\Generated_Source\PSoC4/UART_UART.c ****             if(UART_UART_PARITY_NONE != config->parity)
 165:.\Generated_Source\PSoC4/UART_UART.c ****             {
 166:.\Generated_Source\PSoC4/UART_UART.c ****                UART_UART_RX_CTRL_REG |= UART_GET_UART_RX_CTRL_PARITY(config->parity) |
 167:.\Generated_Source\PSoC4/UART_UART.c ****                                                     UART_UART_RX_CTRL_PARITY_ENABLED;
 168:.\Generated_Source\PSoC4/UART_UART.c ****             }
 169:.\Generated_Source\PSoC4/UART_UART.c **** 
 170:.\Generated_Source\PSoC4/UART_UART.c ****             UART_RX_CTRL_REG      = UART_GET_RX_CTRL_DATA_WIDTH(config->dataBits)       |
 171:.\Generated_Source\PSoC4/UART_UART.c ****                                                 UART_GET_RX_CTRL_MEDIAN(config->enableMedianFilter)
 172:.\Generated_Source\PSoC4/UART_UART.c ****                                                 UART_GET_UART_RX_CTRL_ENABLED(config->direction);
 173:.\Generated_Source\PSoC4/UART_UART.c **** 
 174:.\Generated_Source\PSoC4/UART_UART.c ****             UART_RX_FIFO_CTRL_REG = UART_GET_RX_FIFO_CTRL_TRIGGER_LEVEL(config->rxTriggerLevel);
 175:.\Generated_Source\PSoC4/UART_UART.c **** 
 176:.\Generated_Source\PSoC4/UART_UART.c ****             /* Configure MP address */
 177:.\Generated_Source\PSoC4/UART_UART.c ****             UART_RX_MATCH_REG     = UART_GET_RX_MATCH_ADDR(config->multiprocAddr) |
 178:.\Generated_Source\PSoC4/UART_UART.c ****                                                 UART_GET_RX_MATCH_MASK(config->multiprocAddrMask);
 179:.\Generated_Source\PSoC4/UART_UART.c **** 
 180:.\Generated_Source\PSoC4/UART_UART.c ****             /* Configure RX direction */
 181:.\Generated_Source\PSoC4/UART_UART.c ****             UART_UART_TX_CTRL_REG = UART_GET_UART_TX_CTRL_MODE(config->stopBits) |
 182:.\Generated_Source\PSoC4/UART_UART.c ****                                                 UART_GET_UART_TX_CTRL_RETRY_NACK(config->enableRetr
 183:.\Generated_Source\PSoC4/UART_UART.c **** 
 184:.\Generated_Source\PSoC4/UART_UART.c ****             if(UART_UART_PARITY_NONE != config->parity)
 185:.\Generated_Source\PSoC4/UART_UART.c ****             {
 186:.\Generated_Source\PSoC4/UART_UART.c ****                UART_UART_TX_CTRL_REG |= UART_GET_UART_TX_CTRL_PARITY(config->parity) |
 187:.\Generated_Source\PSoC4/UART_UART.c ****                                                     UART_UART_TX_CTRL_PARITY_ENABLED;
 188:.\Generated_Source\PSoC4/UART_UART.c ****             }
 189:.\Generated_Source\PSoC4/UART_UART.c **** 
 190:.\Generated_Source\PSoC4/UART_UART.c ****             UART_TX_CTRL_REG      = UART_GET_TX_CTRL_DATA_WIDTH(config->dataBits)    |
 191:.\Generated_Source\PSoC4/UART_UART.c ****                                                 UART_GET_UART_TX_CTRL_ENABLED(config->direction);
 192:.\Generated_Source\PSoC4/UART_UART.c **** 
 193:.\Generated_Source\PSoC4/UART_UART.c ****             UART_TX_FIFO_CTRL_REG = UART_GET_TX_FIFO_CTRL_TRIGGER_LEVEL(config->txTriggerLevel);
 194:.\Generated_Source\PSoC4/UART_UART.c **** 
 195:.\Generated_Source\PSoC4/UART_UART.c ****         #if !(UART_CY_SCBIP_V0 || UART_CY_SCBIP_V1)
 196:.\Generated_Source\PSoC4/UART_UART.c ****             UART_UART_FLOW_CTRL_REG = UART_GET_UART_FLOW_CTRL_CTS_ENABLE(config->enableCts) | \
 197:.\Generated_Source\PSoC4/UART_UART.c ****                                             UART_GET_UART_FLOW_CTRL_CTS_POLARITY (config->ctsPolari
 198:.\Generated_Source\PSoC4/UART_UART.c ****                                             UART_GET_UART_FLOW_CTRL_RTS_POLARITY (config->rtsPolari
 199:.\Generated_Source\PSoC4/UART_UART.c ****                                             UART_GET_UART_FLOW_CTRL_TRIGGER_LEVEL(config->rtsRxFifo
 200:.\Generated_Source\PSoC4/UART_UART.c ****         #endif /* !(UART_CY_SCBIP_V0 || UART_CY_SCBIP_V1) */
 201:.\Generated_Source\PSoC4/UART_UART.c **** 
 202:.\Generated_Source\PSoC4/UART_UART.c ****             /* Configure interrupt with UART handler but do not enable it */
 203:.\Generated_Source\PSoC4/UART_UART.c ****             CyIntDisable    (UART_ISR_NUMBER);
ARM GAS  C:\Users\owono\AppData\Local\Temp\cc0srShD.s 			page 5


 204:.\Generated_Source\PSoC4/UART_UART.c ****             CyIntSetPriority(UART_ISR_NUMBER, UART_ISR_PRIORITY);
 205:.\Generated_Source\PSoC4/UART_UART.c ****             (void) CyIntSetVector(UART_ISR_NUMBER, &UART_SPI_UART_ISR);
 206:.\Generated_Source\PSoC4/UART_UART.c **** 
 207:.\Generated_Source\PSoC4/UART_UART.c ****             /* Configure WAKE interrupt */
 208:.\Generated_Source\PSoC4/UART_UART.c ****         #if(UART_UART_RX_WAKEUP_IRQ)
 209:.\Generated_Source\PSoC4/UART_UART.c ****             CyIntDisable    (UART_RX_WAKE_ISR_NUMBER);
 210:.\Generated_Source\PSoC4/UART_UART.c ****             CyIntSetPriority(UART_RX_WAKE_ISR_NUMBER, UART_RX_WAKE_ISR_PRIORITY);
 211:.\Generated_Source\PSoC4/UART_UART.c ****             (void) CyIntSetVector(UART_RX_WAKE_ISR_NUMBER, &UART_UART_WAKEUP_ISR);
 212:.\Generated_Source\PSoC4/UART_UART.c ****         #endif /* (UART_UART_RX_WAKEUP_IRQ) */
 213:.\Generated_Source\PSoC4/UART_UART.c **** 
 214:.\Generated_Source\PSoC4/UART_UART.c ****             /* Configure interrupt sources */
 215:.\Generated_Source\PSoC4/UART_UART.c ****             UART_INTR_I2C_EC_MASK_REG = UART_NO_INTR_SOURCES;
 216:.\Generated_Source\PSoC4/UART_UART.c ****             UART_INTR_SPI_EC_MASK_REG = UART_NO_INTR_SOURCES;
 217:.\Generated_Source\PSoC4/UART_UART.c ****             UART_INTR_SLAVE_MASK_REG  = UART_NO_INTR_SOURCES;
 218:.\Generated_Source\PSoC4/UART_UART.c ****             UART_INTR_MASTER_MASK_REG = UART_NO_INTR_SOURCES;
 219:.\Generated_Source\PSoC4/UART_UART.c ****             UART_INTR_RX_MASK_REG     = config->rxInterruptMask;
 220:.\Generated_Source\PSoC4/UART_UART.c ****             UART_INTR_TX_MASK_REG     = config->txInterruptMask;
 221:.\Generated_Source\PSoC4/UART_UART.c ****         
 222:.\Generated_Source\PSoC4/UART_UART.c ****             /* Configure TX interrupt sources to restore. */
 223:.\Generated_Source\PSoC4/UART_UART.c ****             UART_IntrTxMask = LO16(UART_INTR_TX_MASK_REG);
 224:.\Generated_Source\PSoC4/UART_UART.c **** 
 225:.\Generated_Source\PSoC4/UART_UART.c ****             /* Clear RX buffer indexes */
 226:.\Generated_Source\PSoC4/UART_UART.c ****             UART_rxBufferHead     = 0u;
 227:.\Generated_Source\PSoC4/UART_UART.c ****             UART_rxBufferTail     = 0u;
 228:.\Generated_Source\PSoC4/UART_UART.c ****             UART_rxBufferOverflow = 0u;
 229:.\Generated_Source\PSoC4/UART_UART.c **** 
 230:.\Generated_Source\PSoC4/UART_UART.c ****             /* Clear TX buffer indexes */
 231:.\Generated_Source\PSoC4/UART_UART.c ****             UART_txBufferHead = 0u;
 232:.\Generated_Source\PSoC4/UART_UART.c ****             UART_txBufferTail = 0u;
 233:.\Generated_Source\PSoC4/UART_UART.c ****         }
 234:.\Generated_Source\PSoC4/UART_UART.c ****     }
 235:.\Generated_Source\PSoC4/UART_UART.c **** 
 236:.\Generated_Source\PSoC4/UART_UART.c **** #else
 237:.\Generated_Source\PSoC4/UART_UART.c **** 
 238:.\Generated_Source\PSoC4/UART_UART.c ****     /*******************************************************************************
 239:.\Generated_Source\PSoC4/UART_UART.c ****     * Function Name: UART_UartInit
 240:.\Generated_Source\PSoC4/UART_UART.c ****     ****************************************************************************//**
 241:.\Generated_Source\PSoC4/UART_UART.c ****     *
 242:.\Generated_Source\PSoC4/UART_UART.c ****     *  Configures the SCB for the UART operation.
 243:.\Generated_Source\PSoC4/UART_UART.c ****     *
 244:.\Generated_Source\PSoC4/UART_UART.c ****     *******************************************************************************/
 245:.\Generated_Source\PSoC4/UART_UART.c ****     void UART_UartInit(void)
 246:.\Generated_Source\PSoC4/UART_UART.c ****     {
  26              		.loc 1 246 0
  27              		.cfi_startproc
  28 0000 80B5     		push	{r7, lr}
  29              		.cfi_def_cfa_offset 8
  30              		.cfi_offset 7, -8
  31              		.cfi_offset 14, -4
  32 0002 00AF     		add	r7, sp, #0
  33              		.cfi_def_cfa_register 7
 247:.\Generated_Source\PSoC4/UART_UART.c ****         /* Configure UART interface */
 248:.\Generated_Source\PSoC4/UART_UART.c ****         UART_CTRL_REG = UART_UART_DEFAULT_CTRL;
  34              		.loc 1 248 0
  35 0004 1B4B     		ldr	r3, .L2
  36 0006 1C4A     		ldr	r2, .L2+4
  37 0008 1A60     		str	r2, [r3]
ARM GAS  C:\Users\owono\AppData\Local\Temp\cc0srShD.s 			page 6


 249:.\Generated_Source\PSoC4/UART_UART.c **** 
 250:.\Generated_Source\PSoC4/UART_UART.c ****         /* Configure sub-mode: UART, SmartCard or IrDA */
 251:.\Generated_Source\PSoC4/UART_UART.c ****         UART_UART_CTRL_REG = UART_UART_DEFAULT_UART_CTRL;
  38              		.loc 1 251 0
  39 000a 1C4B     		ldr	r3, .L2+8
  40 000c 0022     		mov	r2, #0
  41 000e 1A60     		str	r2, [r3]
 252:.\Generated_Source\PSoC4/UART_UART.c **** 
 253:.\Generated_Source\PSoC4/UART_UART.c ****         /* Configure RX direction */
 254:.\Generated_Source\PSoC4/UART_UART.c ****         UART_UART_RX_CTRL_REG = UART_UART_DEFAULT_UART_RX_CTRL;
  42              		.loc 1 254 0
  43 0010 1B4B     		ldr	r3, .L2+12
  44 0012 0122     		mov	r2, #1
  45 0014 1A60     		str	r2, [r3]
 255:.\Generated_Source\PSoC4/UART_UART.c ****         UART_RX_CTRL_REG      = UART_UART_DEFAULT_RX_CTRL;
  46              		.loc 1 255 0
  47 0016 1B4B     		ldr	r3, .L2+16
  48 0018 0722     		mov	r2, #7
  49 001a 1A60     		str	r2, [r3]
 256:.\Generated_Source\PSoC4/UART_UART.c ****         UART_RX_FIFO_CTRL_REG = UART_UART_DEFAULT_RX_FIFO_CTRL;
  50              		.loc 1 256 0
  51 001c 1A4B     		ldr	r3, .L2+20
  52 001e 0722     		mov	r2, #7
  53 0020 1A60     		str	r2, [r3]
 257:.\Generated_Source\PSoC4/UART_UART.c ****         UART_RX_MATCH_REG     = UART_UART_DEFAULT_RX_MATCH_REG;
  54              		.loc 1 257 0
  55 0022 1A4B     		ldr	r3, .L2+24
  56 0024 0022     		mov	r2, #0
  57 0026 1A60     		str	r2, [r3]
 258:.\Generated_Source\PSoC4/UART_UART.c **** 
 259:.\Generated_Source\PSoC4/UART_UART.c ****         /* Configure TX direction */
 260:.\Generated_Source\PSoC4/UART_UART.c ****         UART_UART_TX_CTRL_REG = UART_UART_DEFAULT_UART_TX_CTRL;
  58              		.loc 1 260 0
  59 0028 194B     		ldr	r3, .L2+28
  60 002a 0122     		mov	r2, #1
  61 002c 1A60     		str	r2, [r3]
 261:.\Generated_Source\PSoC4/UART_UART.c ****         UART_TX_CTRL_REG      = UART_UART_DEFAULT_TX_CTRL;
  62              		.loc 1 261 0
  63 002e 194B     		ldr	r3, .L2+32
  64 0030 194A     		ldr	r2, .L2+36
  65 0032 1A60     		str	r2, [r3]
 262:.\Generated_Source\PSoC4/UART_UART.c ****         UART_TX_FIFO_CTRL_REG = UART_UART_DEFAULT_TX_FIFO_CTRL;
  66              		.loc 1 262 0
  67 0034 194B     		ldr	r3, .L2+40
  68 0036 0022     		mov	r2, #0
  69 0038 1A60     		str	r2, [r3]
 263:.\Generated_Source\PSoC4/UART_UART.c **** 
 264:.\Generated_Source\PSoC4/UART_UART.c ****     #if !(UART_CY_SCBIP_V0 || UART_CY_SCBIP_V1)
 265:.\Generated_Source\PSoC4/UART_UART.c ****         UART_UART_FLOW_CTRL_REG = UART_UART_DEFAULT_FLOW_CTRL;
  70              		.loc 1 265 0
  71 003a 194B     		ldr	r3, .L2+44
  72 003c 0422     		mov	r2, #4
  73 003e 1A60     		str	r2, [r3]
 266:.\Generated_Source\PSoC4/UART_UART.c ****     #endif /* !(UART_CY_SCBIP_V0 || UART_CY_SCBIP_V1) */
 267:.\Generated_Source\PSoC4/UART_UART.c **** 
 268:.\Generated_Source\PSoC4/UART_UART.c ****         /* Configure interrupt with UART handler but do not enable it */
 269:.\Generated_Source\PSoC4/UART_UART.c ****     #if(UART_SCB_IRQ_INTERNAL)
ARM GAS  C:\Users\owono\AppData\Local\Temp\cc0srShD.s 			page 7


 270:.\Generated_Source\PSoC4/UART_UART.c ****         CyIntDisable    (UART_ISR_NUMBER);
 271:.\Generated_Source\PSoC4/UART_UART.c ****         CyIntSetPriority(UART_ISR_NUMBER, UART_ISR_PRIORITY);
 272:.\Generated_Source\PSoC4/UART_UART.c ****         (void) CyIntSetVector(UART_ISR_NUMBER, &UART_SPI_UART_ISR);
 273:.\Generated_Source\PSoC4/UART_UART.c ****     #endif /* (UART_SCB_IRQ_INTERNAL) */
 274:.\Generated_Source\PSoC4/UART_UART.c **** 
 275:.\Generated_Source\PSoC4/UART_UART.c ****         /* Configure WAKE interrupt */
 276:.\Generated_Source\PSoC4/UART_UART.c ****     #if(UART_UART_RX_WAKEUP_IRQ)
 277:.\Generated_Source\PSoC4/UART_UART.c ****         CyIntDisable    (UART_RX_WAKE_ISR_NUMBER);
 278:.\Generated_Source\PSoC4/UART_UART.c ****         CyIntSetPriority(UART_RX_WAKE_ISR_NUMBER, UART_RX_WAKE_ISR_PRIORITY);
 279:.\Generated_Source\PSoC4/UART_UART.c ****         (void) CyIntSetVector(UART_RX_WAKE_ISR_NUMBER, &UART_UART_WAKEUP_ISR);
 280:.\Generated_Source\PSoC4/UART_UART.c ****     #endif /* (UART_UART_RX_WAKEUP_IRQ) */
 281:.\Generated_Source\PSoC4/UART_UART.c **** 
 282:.\Generated_Source\PSoC4/UART_UART.c ****         /* Configure interrupt sources */
 283:.\Generated_Source\PSoC4/UART_UART.c ****         UART_INTR_I2C_EC_MASK_REG = UART_UART_DEFAULT_INTR_I2C_EC_MASK;
  74              		.loc 1 283 0
  75 0040 184B     		ldr	r3, .L2+48
  76 0042 0022     		mov	r2, #0
  77 0044 1A60     		str	r2, [r3]
 284:.\Generated_Source\PSoC4/UART_UART.c ****         UART_INTR_SPI_EC_MASK_REG = UART_UART_DEFAULT_INTR_SPI_EC_MASK;
  78              		.loc 1 284 0
  79 0046 184B     		ldr	r3, .L2+52
  80 0048 0022     		mov	r2, #0
  81 004a 1A60     		str	r2, [r3]
 285:.\Generated_Source\PSoC4/UART_UART.c ****         UART_INTR_SLAVE_MASK_REG  = UART_UART_DEFAULT_INTR_SLAVE_MASK;
  82              		.loc 1 285 0
  83 004c 174B     		ldr	r3, .L2+56
  84 004e 0022     		mov	r2, #0
  85 0050 1A60     		str	r2, [r3]
 286:.\Generated_Source\PSoC4/UART_UART.c ****         UART_INTR_MASTER_MASK_REG = UART_UART_DEFAULT_INTR_MASTER_MASK;
  86              		.loc 1 286 0
  87 0052 174B     		ldr	r3, .L2+60
  88 0054 0022     		mov	r2, #0
  89 0056 1A60     		str	r2, [r3]
 287:.\Generated_Source\PSoC4/UART_UART.c ****         UART_INTR_RX_MASK_REG     = UART_UART_DEFAULT_INTR_RX_MASK;
  90              		.loc 1 287 0
  91 0058 164B     		ldr	r3, .L2+64
  92 005a 0022     		mov	r2, #0
  93 005c 1A60     		str	r2, [r3]
 288:.\Generated_Source\PSoC4/UART_UART.c ****         UART_INTR_TX_MASK_REG     = UART_UART_DEFAULT_INTR_TX_MASK;
  94              		.loc 1 288 0
  95 005e 164B     		ldr	r3, .L2+68
  96 0060 0022     		mov	r2, #0
  97 0062 1A60     		str	r2, [r3]
 289:.\Generated_Source\PSoC4/UART_UART.c ****     
 290:.\Generated_Source\PSoC4/UART_UART.c ****         /* Configure TX interrupt sources to restore. */
 291:.\Generated_Source\PSoC4/UART_UART.c ****         UART_IntrTxMask = LO16(UART_INTR_TX_MASK_REG);
  98              		.loc 1 291 0
  99 0064 144B     		ldr	r3, .L2+68
 100 0066 1B68     		ldr	r3, [r3]
 101 0068 9AB2     		uxth	r2, r3
 102 006a 144B     		ldr	r3, .L2+72
 103 006c 1A80     		strh	r2, [r3]
 292:.\Generated_Source\PSoC4/UART_UART.c **** 
 293:.\Generated_Source\PSoC4/UART_UART.c ****     #if(UART_INTERNAL_RX_SW_BUFFER_CONST)
 294:.\Generated_Source\PSoC4/UART_UART.c ****         UART_rxBufferHead     = 0u;
 295:.\Generated_Source\PSoC4/UART_UART.c ****         UART_rxBufferTail     = 0u;
 296:.\Generated_Source\PSoC4/UART_UART.c ****         UART_rxBufferOverflow = 0u;
ARM GAS  C:\Users\owono\AppData\Local\Temp\cc0srShD.s 			page 8


 297:.\Generated_Source\PSoC4/UART_UART.c ****     #endif /* (UART_INTERNAL_RX_SW_BUFFER_CONST) */
 298:.\Generated_Source\PSoC4/UART_UART.c **** 
 299:.\Generated_Source\PSoC4/UART_UART.c ****     #if(UART_INTERNAL_TX_SW_BUFFER_CONST)
 300:.\Generated_Source\PSoC4/UART_UART.c ****         UART_txBufferHead = 0u;
 301:.\Generated_Source\PSoC4/UART_UART.c ****         UART_txBufferTail = 0u;
 302:.\Generated_Source\PSoC4/UART_UART.c ****     #endif /* (UART_INTERNAL_TX_SW_BUFFER_CONST) */
 303:.\Generated_Source\PSoC4/UART_UART.c ****     }
 104              		.loc 1 303 0
 105 006e BD46     		mov	sp, r7
 106              		@ sp needed
 107 0070 80BD     		pop	{r7, pc}
 108              	.L3:
 109 0072 C046     		.align	2
 110              	.L2:
 111 0074 00002440 		.word	1076101120
 112 0078 0F000002 		.word	33554447
 113 007c 40002440 		.word	1076101184
 114 0080 48002440 		.word	1076101192
 115 0084 00032440 		.word	1076101888
 116 0088 04032440 		.word	1076101892
 117 008c 10032440 		.word	1076101904
 118 0090 44002440 		.word	1076101188
 119 0094 00022440 		.word	1076101632
 120 0098 07000080 		.word	-2147483641
 121 009c 04022440 		.word	1076101636
 122 00a0 50002440 		.word	1076101200
 123 00a4 880E2440 		.word	1076104840
 124 00a8 C80E2440 		.word	1076104904
 125 00ac 480F2440 		.word	1076105032
 126 00b0 080F2440 		.word	1076104968
 127 00b4 C80F2440 		.word	1076105160
 128 00b8 880F2440 		.word	1076105096
 129 00bc 00000000 		.word	UART_IntrTxMask
 130              		.cfi_endproc
 131              	.LFE2:
 132              		.size	UART_UartInit, .-UART_UartInit
 133              		.section	.text.UART_UartPostEnable,"ax",%progbits
 134              		.align	2
 135              		.global	UART_UartPostEnable
 136              		.code	16
 137              		.thumb_func
 138              		.type	UART_UartPostEnable, %function
 139              	UART_UartPostEnable:
 140              	.LFB3:
 304:.\Generated_Source\PSoC4/UART_UART.c **** #endif /* (UART_SCB_MODE_UNCONFIG_CONST_CFG) */
 305:.\Generated_Source\PSoC4/UART_UART.c **** 
 306:.\Generated_Source\PSoC4/UART_UART.c **** 
 307:.\Generated_Source\PSoC4/UART_UART.c **** /*******************************************************************************
 308:.\Generated_Source\PSoC4/UART_UART.c **** * Function Name: UART_UartPostEnable
 309:.\Generated_Source\PSoC4/UART_UART.c **** ****************************************************************************//**
 310:.\Generated_Source\PSoC4/UART_UART.c **** *
 311:.\Generated_Source\PSoC4/UART_UART.c **** *  Restores HSIOM settings for the UART output pins (TX and/or RTS) to be
 312:.\Generated_Source\PSoC4/UART_UART.c **** *  controlled by the SCB UART.
 313:.\Generated_Source\PSoC4/UART_UART.c **** *
 314:.\Generated_Source\PSoC4/UART_UART.c **** *******************************************************************************/
 315:.\Generated_Source\PSoC4/UART_UART.c **** void UART_UartPostEnable(void)
 316:.\Generated_Source\PSoC4/UART_UART.c **** {
ARM GAS  C:\Users\owono\AppData\Local\Temp\cc0srShD.s 			page 9


 141              		.loc 1 316 0
 142              		.cfi_startproc
 143 0000 80B5     		push	{r7, lr}
 144              		.cfi_def_cfa_offset 8
 145              		.cfi_offset 7, -8
 146              		.cfi_offset 14, -4
 147 0002 00AF     		add	r7, sp, #0
 148              		.cfi_def_cfa_register 7
 317:.\Generated_Source\PSoC4/UART_UART.c **** #if (UART_SCB_MODE_UNCONFIG_CONST_CFG)
 318:.\Generated_Source\PSoC4/UART_UART.c ****     #if (UART_TX_SCL_MISO_PIN)
 319:.\Generated_Source\PSoC4/UART_UART.c ****         if (UART_CHECK_TX_SCL_MISO_PIN_USED)
 320:.\Generated_Source\PSoC4/UART_UART.c ****         {
 321:.\Generated_Source\PSoC4/UART_UART.c ****             /* Set SCB UART to drive the output pin */
 322:.\Generated_Source\PSoC4/UART_UART.c ****             UART_SET_HSIOM_SEL(UART_TX_SCL_MISO_HSIOM_REG, UART_TX_SCL_MISO_HSIOM_MASK,
 323:.\Generated_Source\PSoC4/UART_UART.c ****                                            UART_TX_SCL_MISO_HSIOM_POS, UART_TX_SCL_MISO_HSIOM_SEL_U
 324:.\Generated_Source\PSoC4/UART_UART.c ****         }
 325:.\Generated_Source\PSoC4/UART_UART.c ****     #endif /* (UART_TX_SCL_MISO_PIN_PIN) */
 326:.\Generated_Source\PSoC4/UART_UART.c **** 
 327:.\Generated_Source\PSoC4/UART_UART.c ****     #if !(UART_CY_SCBIP_V0 || UART_CY_SCBIP_V1)
 328:.\Generated_Source\PSoC4/UART_UART.c ****         #if (UART_RTS_SS0_PIN)
 329:.\Generated_Source\PSoC4/UART_UART.c ****             if (UART_CHECK_RTS_SS0_PIN_USED)
 330:.\Generated_Source\PSoC4/UART_UART.c ****             {
 331:.\Generated_Source\PSoC4/UART_UART.c ****                 /* Set SCB UART to drive the output pin */
 332:.\Generated_Source\PSoC4/UART_UART.c ****                 UART_SET_HSIOM_SEL(UART_RTS_SS0_HSIOM_REG, UART_RTS_SS0_HSIOM_MASK,
 333:.\Generated_Source\PSoC4/UART_UART.c ****                                                UART_RTS_SS0_HSIOM_POS, UART_RTS_SS0_HSIOM_SEL_UART)
 334:.\Generated_Source\PSoC4/UART_UART.c ****             }
 335:.\Generated_Source\PSoC4/UART_UART.c ****         #endif /* (UART_RTS_SS0_PIN) */
 336:.\Generated_Source\PSoC4/UART_UART.c ****     #endif /* !(UART_CY_SCBIP_V0 || UART_CY_SCBIP_V1) */
 337:.\Generated_Source\PSoC4/UART_UART.c **** 
 338:.\Generated_Source\PSoC4/UART_UART.c **** #else
 339:.\Generated_Source\PSoC4/UART_UART.c ****     #if (UART_UART_TX_PIN)
 340:.\Generated_Source\PSoC4/UART_UART.c ****          /* Set SCB UART to drive the output pin */
 341:.\Generated_Source\PSoC4/UART_UART.c ****         UART_SET_HSIOM_SEL(UART_TX_HSIOM_REG, UART_TX_HSIOM_MASK,
 149              		.loc 1 341 0
 150 0004 074B     		ldr	r3, .L5
 151 0006 074A     		ldr	r2, .L5
 152 0008 1268     		ldr	r2, [r2]
 153 000a 0749     		ldr	r1, .L5+4
 154 000c 0A40     		and	r2, r1
 155 000e 9021     		mov	r1, #144
 156 0010 0904     		lsl	r1, r1, #16
 157 0012 0A43     		orr	r2, r1
 158 0014 1A60     		str	r2, [r3]
 342:.\Generated_Source\PSoC4/UART_UART.c ****                                        UART_TX_HSIOM_POS, UART_TX_HSIOM_SEL_UART);
 343:.\Generated_Source\PSoC4/UART_UART.c ****     #endif /* (UART_UART_TX_PIN) */
 344:.\Generated_Source\PSoC4/UART_UART.c **** 
 345:.\Generated_Source\PSoC4/UART_UART.c ****     #if (UART_UART_RTS_PIN)
 346:.\Generated_Source\PSoC4/UART_UART.c ****         /* Set SCB UART to drive the output pin */
 347:.\Generated_Source\PSoC4/UART_UART.c ****         UART_SET_HSIOM_SEL(UART_RTS_HSIOM_REG, UART_RTS_HSIOM_MASK,
 348:.\Generated_Source\PSoC4/UART_UART.c ****                                        UART_RTS_HSIOM_POS, UART_RTS_HSIOM_SEL_UART);
 349:.\Generated_Source\PSoC4/UART_UART.c ****     #endif /* (UART_UART_RTS_PIN) */
 350:.\Generated_Source\PSoC4/UART_UART.c **** #endif /* (UART_SCB_MODE_UNCONFIG_CONST_CFG) */
 351:.\Generated_Source\PSoC4/UART_UART.c **** 
 352:.\Generated_Source\PSoC4/UART_UART.c ****     /* Restore TX interrupt sources. */
 353:.\Generated_Source\PSoC4/UART_UART.c ****     UART_SetTxInterruptMode(UART_IntrTxMask);
 159              		.loc 1 353 0
 160 0016 054B     		ldr	r3, .L5+8
ARM GAS  C:\Users\owono\AppData\Local\Temp\cc0srShD.s 			page 10


 161 0018 054A     		ldr	r2, .L5+12
 162 001a 1288     		ldrh	r2, [r2]
 163 001c 1A60     		str	r2, [r3]
 354:.\Generated_Source\PSoC4/UART_UART.c **** }
 164              		.loc 1 354 0
 165 001e BD46     		mov	sp, r7
 166              		@ sp needed
 167 0020 80BD     		pop	{r7, pc}
 168              	.L6:
 169 0022 C046     		.align	2
 170              	.L5:
 171 0024 00010240 		.word	1073873152
 172 0028 FFFF0FFF 		.word	-15728641
 173 002c 880F2440 		.word	1076105096
 174 0030 00000000 		.word	UART_IntrTxMask
 175              		.cfi_endproc
 176              	.LFE3:
 177              		.size	UART_UartPostEnable, .-UART_UartPostEnable
 178              		.section	.text.UART_UartStop,"ax",%progbits
 179              		.align	2
 180              		.global	UART_UartStop
 181              		.code	16
 182              		.thumb_func
 183              		.type	UART_UartStop, %function
 184              	UART_UartStop:
 185              	.LFB4:
 355:.\Generated_Source\PSoC4/UART_UART.c **** 
 356:.\Generated_Source\PSoC4/UART_UART.c **** 
 357:.\Generated_Source\PSoC4/UART_UART.c **** /*******************************************************************************
 358:.\Generated_Source\PSoC4/UART_UART.c **** * Function Name: UART_UartStop
 359:.\Generated_Source\PSoC4/UART_UART.c **** ****************************************************************************//**
 360:.\Generated_Source\PSoC4/UART_UART.c **** *
 361:.\Generated_Source\PSoC4/UART_UART.c **** *  Changes the HSIOM settings for the UART output pins (TX and/or RTS) to keep
 362:.\Generated_Source\PSoC4/UART_UART.c **** *  them inactive after the block is disabled. The output pins are controlled by
 363:.\Generated_Source\PSoC4/UART_UART.c **** *  the GPIO data register. Also, the function disables the skip start feature
 364:.\Generated_Source\PSoC4/UART_UART.c **** *  to not cause it to trigger after the component is enabled.
 365:.\Generated_Source\PSoC4/UART_UART.c **** *
 366:.\Generated_Source\PSoC4/UART_UART.c **** *******************************************************************************/
 367:.\Generated_Source\PSoC4/UART_UART.c **** void UART_UartStop(void)
 368:.\Generated_Source\PSoC4/UART_UART.c **** {
 186              		.loc 1 368 0
 187              		.cfi_startproc
 188 0000 80B5     		push	{r7, lr}
 189              		.cfi_def_cfa_offset 8
 190              		.cfi_offset 7, -8
 191              		.cfi_offset 14, -4
 192 0002 00AF     		add	r7, sp, #0
 193              		.cfi_def_cfa_register 7
 369:.\Generated_Source\PSoC4/UART_UART.c **** #if(UART_SCB_MODE_UNCONFIG_CONST_CFG)
 370:.\Generated_Source\PSoC4/UART_UART.c ****     #if (UART_TX_SCL_MISO_PIN)
 371:.\Generated_Source\PSoC4/UART_UART.c ****         if (UART_CHECK_TX_SCL_MISO_PIN_USED)
 372:.\Generated_Source\PSoC4/UART_UART.c ****         {
 373:.\Generated_Source\PSoC4/UART_UART.c ****             /* Set GPIO to drive output pin */
 374:.\Generated_Source\PSoC4/UART_UART.c ****             UART_SET_HSIOM_SEL(UART_TX_SCL_MISO_HSIOM_REG, UART_TX_SCL_MISO_HSIOM_MASK,
 375:.\Generated_Source\PSoC4/UART_UART.c ****                                            UART_TX_SCL_MISO_HSIOM_POS, UART_TX_SCL_MISO_HSIOM_SEL_G
 376:.\Generated_Source\PSoC4/UART_UART.c ****         }
 377:.\Generated_Source\PSoC4/UART_UART.c ****     #endif /* (UART_TX_SCL_MISO_PIN_PIN) */
ARM GAS  C:\Users\owono\AppData\Local\Temp\cc0srShD.s 			page 11


 378:.\Generated_Source\PSoC4/UART_UART.c **** 
 379:.\Generated_Source\PSoC4/UART_UART.c ****     #if !(UART_CY_SCBIP_V0 || UART_CY_SCBIP_V1)
 380:.\Generated_Source\PSoC4/UART_UART.c ****         #if (UART_RTS_SS0_PIN)
 381:.\Generated_Source\PSoC4/UART_UART.c ****             if (UART_CHECK_RTS_SS0_PIN_USED)
 382:.\Generated_Source\PSoC4/UART_UART.c ****             {
 383:.\Generated_Source\PSoC4/UART_UART.c ****                 /* Set output pin state after block is disabled */
 384:.\Generated_Source\PSoC4/UART_UART.c ****                 UART_uart_rts_spi_ss0_Write(UART_GET_UART_RTS_INACTIVE);
 385:.\Generated_Source\PSoC4/UART_UART.c **** 
 386:.\Generated_Source\PSoC4/UART_UART.c ****                 /* Set GPIO to drive output pin */
 387:.\Generated_Source\PSoC4/UART_UART.c ****                 UART_SET_HSIOM_SEL(UART_RTS_SS0_HSIOM_REG, UART_RTS_SS0_HSIOM_MASK,
 388:.\Generated_Source\PSoC4/UART_UART.c ****                                                UART_RTS_SS0_HSIOM_POS, UART_RTS_SS0_HSIOM_SEL_GPIO)
 389:.\Generated_Source\PSoC4/UART_UART.c ****             }
 390:.\Generated_Source\PSoC4/UART_UART.c ****         #endif /* (UART_RTS_SS0_PIN) */
 391:.\Generated_Source\PSoC4/UART_UART.c ****     #endif /* !(UART_CY_SCBIP_V0 || UART_CY_SCBIP_V1) */
 392:.\Generated_Source\PSoC4/UART_UART.c **** 
 393:.\Generated_Source\PSoC4/UART_UART.c **** #else
 394:.\Generated_Source\PSoC4/UART_UART.c ****     #if (UART_UART_TX_PIN)
 395:.\Generated_Source\PSoC4/UART_UART.c ****         /* Set GPIO to drive output pin */
 396:.\Generated_Source\PSoC4/UART_UART.c ****         UART_SET_HSIOM_SEL(UART_TX_HSIOM_REG, UART_TX_HSIOM_MASK,
 194              		.loc 1 396 0
 195 0004 084B     		ldr	r3, .L8
 196 0006 084A     		ldr	r2, .L8
 197 0008 1268     		ldr	r2, [r2]
 198 000a 0849     		ldr	r1, .L8+4
 199 000c 0A40     		and	r2, r1
 200 000e 1A60     		str	r2, [r3]
 397:.\Generated_Source\PSoC4/UART_UART.c ****                                        UART_TX_HSIOM_POS, UART_TX_HSIOM_SEL_GPIO);
 398:.\Generated_Source\PSoC4/UART_UART.c ****     #endif /* (UART_UART_TX_PIN) */
 399:.\Generated_Source\PSoC4/UART_UART.c **** 
 400:.\Generated_Source\PSoC4/UART_UART.c ****     #if (UART_UART_RTS_PIN)
 401:.\Generated_Source\PSoC4/UART_UART.c ****         /* Set output pin state after block is disabled */
 402:.\Generated_Source\PSoC4/UART_UART.c ****         UART_rts_Write(UART_GET_UART_RTS_INACTIVE);
 403:.\Generated_Source\PSoC4/UART_UART.c **** 
 404:.\Generated_Source\PSoC4/UART_UART.c ****         /* Set GPIO to drive output pin */
 405:.\Generated_Source\PSoC4/UART_UART.c ****         UART_SET_HSIOM_SEL(UART_RTS_HSIOM_REG, UART_RTS_HSIOM_MASK,
 406:.\Generated_Source\PSoC4/UART_UART.c ****                                        UART_RTS_HSIOM_POS, UART_RTS_HSIOM_SEL_GPIO);
 407:.\Generated_Source\PSoC4/UART_UART.c ****     #endif /* (UART_UART_RTS_PIN) */
 408:.\Generated_Source\PSoC4/UART_UART.c **** 
 409:.\Generated_Source\PSoC4/UART_UART.c **** #endif /* (UART_SCB_MODE_UNCONFIG_CONST_CFG) */
 410:.\Generated_Source\PSoC4/UART_UART.c **** 
 411:.\Generated_Source\PSoC4/UART_UART.c **** #if (UART_UART_WAKE_ENABLE_CONST)
 412:.\Generated_Source\PSoC4/UART_UART.c ****     /* Disable skip start feature used for wakeup */
 413:.\Generated_Source\PSoC4/UART_UART.c ****     UART_UART_RX_CTRL_REG &= (uint32) ~UART_UART_RX_CTRL_SKIP_START;
 414:.\Generated_Source\PSoC4/UART_UART.c **** #endif /* (UART_UART_WAKE_ENABLE_CONST) */
 415:.\Generated_Source\PSoC4/UART_UART.c **** 
 416:.\Generated_Source\PSoC4/UART_UART.c ****     /* Store TX interrupt sources (exclude level triggered). */
 417:.\Generated_Source\PSoC4/UART_UART.c ****     UART_IntrTxMask = LO16(UART_GetTxInterruptMode() & UART_INTR_UART_TX_RESTORE);
 201              		.loc 1 417 0
 202 0010 074B     		ldr	r3, .L8+8
 203 0012 1B68     		ldr	r3, [r3]
 204 0014 9AB2     		uxth	r2, r3
 205 0016 E423     		mov	r3, #228
 206 0018 DB00     		lsl	r3, r3, #3
 207 001a 1340     		and	r3, r2
 208 001c 9AB2     		uxth	r2, r3
 209 001e 054B     		ldr	r3, .L8+12
 210 0020 1A80     		strh	r2, [r3]
ARM GAS  C:\Users\owono\AppData\Local\Temp\cc0srShD.s 			page 12


 418:.\Generated_Source\PSoC4/UART_UART.c **** }
 211              		.loc 1 418 0
 212 0022 BD46     		mov	sp, r7
 213              		@ sp needed
 214 0024 80BD     		pop	{r7, pc}
 215              	.L9:
 216 0026 C046     		.align	2
 217              	.L8:
 218 0028 00010240 		.word	1073873152
 219 002c FFFF0FFF 		.word	-15728641
 220 0030 880F2440 		.word	1076105096
 221 0034 00000000 		.word	UART_IntrTxMask
 222              		.cfi_endproc
 223              	.LFE4:
 224              		.size	UART_UartStop, .-UART_UartStop
 225              		.section	.text.UART_UartSetRxAddress,"ax",%progbits
 226              		.align	2
 227              		.global	UART_UartSetRxAddress
 228              		.code	16
 229              		.thumb_func
 230              		.type	UART_UartSetRxAddress, %function
 231              	UART_UartSetRxAddress:
 232              	.LFB5:
 419:.\Generated_Source\PSoC4/UART_UART.c **** 
 420:.\Generated_Source\PSoC4/UART_UART.c **** 
 421:.\Generated_Source\PSoC4/UART_UART.c **** /*******************************************************************************
 422:.\Generated_Source\PSoC4/UART_UART.c **** * Function Name: UART_UartSetRxAddress
 423:.\Generated_Source\PSoC4/UART_UART.c **** ****************************************************************************//**
 424:.\Generated_Source\PSoC4/UART_UART.c **** *
 425:.\Generated_Source\PSoC4/UART_UART.c **** *  Sets the hardware detectable receiver address for the UART in the
 426:.\Generated_Source\PSoC4/UART_UART.c **** *  Multiprocessor mode.
 427:.\Generated_Source\PSoC4/UART_UART.c **** *
 428:.\Generated_Source\PSoC4/UART_UART.c **** *  \param address: Address for hardware address detection.
 429:.\Generated_Source\PSoC4/UART_UART.c **** *
 430:.\Generated_Source\PSoC4/UART_UART.c **** *******************************************************************************/
 431:.\Generated_Source\PSoC4/UART_UART.c **** void UART_UartSetRxAddress(uint32 address)
 432:.\Generated_Source\PSoC4/UART_UART.c **** {
 233              		.loc 1 432 0
 234              		.cfi_startproc
 235 0000 80B5     		push	{r7, lr}
 236              		.cfi_def_cfa_offset 8
 237              		.cfi_offset 7, -8
 238              		.cfi_offset 14, -4
 239 0002 84B0     		sub	sp, sp, #16
 240              		.cfi_def_cfa_offset 24
 241 0004 00AF     		add	r7, sp, #0
 242              		.cfi_def_cfa_register 7
 243 0006 7860     		str	r0, [r7, #4]
 433:.\Generated_Source\PSoC4/UART_UART.c ****      uint32 matchReg;
 434:.\Generated_Source\PSoC4/UART_UART.c **** 
 435:.\Generated_Source\PSoC4/UART_UART.c ****     matchReg = UART_RX_MATCH_REG;
 244              		.loc 1 435 0
 245 0008 094B     		ldr	r3, .L11
 246 000a 1B68     		ldr	r3, [r3]
 247 000c FB60     		str	r3, [r7, #12]
 436:.\Generated_Source\PSoC4/UART_UART.c **** 
 437:.\Generated_Source\PSoC4/UART_UART.c ****     matchReg &= ((uint32) ~UART_RX_MATCH_ADDR_MASK); /* Clear address bits */
ARM GAS  C:\Users\owono\AppData\Local\Temp\cc0srShD.s 			page 13


 248              		.loc 1 437 0
 249 000e FB68     		ldr	r3, [r7, #12]
 250 0010 FF22     		mov	r2, #255
 251 0012 9343     		bic	r3, r2
 252 0014 FB60     		str	r3, [r7, #12]
 438:.\Generated_Source\PSoC4/UART_UART.c ****     matchReg |= ((uint32)  (address & UART_RX_MATCH_ADDR_MASK)); /* Set address  */
 253              		.loc 1 438 0
 254 0016 7B68     		ldr	r3, [r7, #4]
 255 0018 FF22     		mov	r2, #255
 256 001a 1340     		and	r3, r2
 257 001c FA68     		ldr	r2, [r7, #12]
 258 001e 1343     		orr	r3, r2
 259 0020 FB60     		str	r3, [r7, #12]
 439:.\Generated_Source\PSoC4/UART_UART.c **** 
 440:.\Generated_Source\PSoC4/UART_UART.c ****     UART_RX_MATCH_REG = matchReg;
 260              		.loc 1 440 0
 261 0022 034B     		ldr	r3, .L11
 262 0024 FA68     		ldr	r2, [r7, #12]
 263 0026 1A60     		str	r2, [r3]
 441:.\Generated_Source\PSoC4/UART_UART.c **** }
 264              		.loc 1 441 0
 265 0028 BD46     		mov	sp, r7
 266 002a 04B0     		add	sp, sp, #16
 267              		@ sp needed
 268 002c 80BD     		pop	{r7, pc}
 269              	.L12:
 270 002e C046     		.align	2
 271              	.L11:
 272 0030 10032440 		.word	1076101904
 273              		.cfi_endproc
 274              	.LFE5:
 275              		.size	UART_UartSetRxAddress, .-UART_UartSetRxAddress
 276              		.section	.text.UART_UartSetRxAddressMask,"ax",%progbits
 277              		.align	2
 278              		.global	UART_UartSetRxAddressMask
 279              		.code	16
 280              		.thumb_func
 281              		.type	UART_UartSetRxAddressMask, %function
 282              	UART_UartSetRxAddressMask:
 283              	.LFB6:
 442:.\Generated_Source\PSoC4/UART_UART.c **** 
 443:.\Generated_Source\PSoC4/UART_UART.c **** 
 444:.\Generated_Source\PSoC4/UART_UART.c **** /*******************************************************************************
 445:.\Generated_Source\PSoC4/UART_UART.c **** * Function Name: UART_UartSetRxAddressMask
 446:.\Generated_Source\PSoC4/UART_UART.c **** ****************************************************************************//**
 447:.\Generated_Source\PSoC4/UART_UART.c **** *
 448:.\Generated_Source\PSoC4/UART_UART.c **** *  Sets the hardware address mask for the UART in the Multiprocessor mode.
 449:.\Generated_Source\PSoC4/UART_UART.c **** *
 450:.\Generated_Source\PSoC4/UART_UART.c **** *  \param addressMask: Address mask.
 451:.\Generated_Source\PSoC4/UART_UART.c **** *   - Bit value 0 – excludes bit from address comparison.
 452:.\Generated_Source\PSoC4/UART_UART.c **** *   - Bit value 1 – the bit needs to match with the corresponding bit
 453:.\Generated_Source\PSoC4/UART_UART.c **** *     of the address.
 454:.\Generated_Source\PSoC4/UART_UART.c **** *
 455:.\Generated_Source\PSoC4/UART_UART.c **** *******************************************************************************/
 456:.\Generated_Source\PSoC4/UART_UART.c **** void UART_UartSetRxAddressMask(uint32 addressMask)
 457:.\Generated_Source\PSoC4/UART_UART.c **** {
 284              		.loc 1 457 0
ARM GAS  C:\Users\owono\AppData\Local\Temp\cc0srShD.s 			page 14


 285              		.cfi_startproc
 286 0000 80B5     		push	{r7, lr}
 287              		.cfi_def_cfa_offset 8
 288              		.cfi_offset 7, -8
 289              		.cfi_offset 14, -4
 290 0002 84B0     		sub	sp, sp, #16
 291              		.cfi_def_cfa_offset 24
 292 0004 00AF     		add	r7, sp, #0
 293              		.cfi_def_cfa_register 7
 294 0006 7860     		str	r0, [r7, #4]
 458:.\Generated_Source\PSoC4/UART_UART.c ****     uint32 matchReg;
 459:.\Generated_Source\PSoC4/UART_UART.c **** 
 460:.\Generated_Source\PSoC4/UART_UART.c ****     matchReg = UART_RX_MATCH_REG;
 295              		.loc 1 460 0
 296 0008 084B     		ldr	r3, .L14
 297 000a 1B68     		ldr	r3, [r3]
 298 000c FB60     		str	r3, [r7, #12]
 461:.\Generated_Source\PSoC4/UART_UART.c **** 
 462:.\Generated_Source\PSoC4/UART_UART.c ****     matchReg &= ((uint32) ~UART_RX_MATCH_MASK_MASK); /* Clear address mask bits */
 299              		.loc 1 462 0
 300 000e FB68     		ldr	r3, [r7, #12]
 301 0010 074A     		ldr	r2, .L14+4
 302 0012 1340     		and	r3, r2
 303 0014 FB60     		str	r3, [r7, #12]
 463:.\Generated_Source\PSoC4/UART_UART.c ****     matchReg |= ((uint32) (addressMask << UART_RX_MATCH_MASK_POS));
 304              		.loc 1 463 0
 305 0016 7B68     		ldr	r3, [r7, #4]
 306 0018 1B04     		lsl	r3, r3, #16
 307 001a FA68     		ldr	r2, [r7, #12]
 308 001c 1343     		orr	r3, r2
 309 001e FB60     		str	r3, [r7, #12]
 464:.\Generated_Source\PSoC4/UART_UART.c **** 
 465:.\Generated_Source\PSoC4/UART_UART.c ****     UART_RX_MATCH_REG = matchReg;
 310              		.loc 1 465 0
 311 0020 024B     		ldr	r3, .L14
 312 0022 FA68     		ldr	r2, [r7, #12]
 313 0024 1A60     		str	r2, [r3]
 466:.\Generated_Source\PSoC4/UART_UART.c **** }
 314              		.loc 1 466 0
 315 0026 BD46     		mov	sp, r7
 316 0028 04B0     		add	sp, sp, #16
 317              		@ sp needed
 318 002a 80BD     		pop	{r7, pc}
 319              	.L15:
 320              		.align	2
 321              	.L14:
 322 002c 10032440 		.word	1076101904
 323 0030 FFFF00FF 		.word	-16711681
 324              		.cfi_endproc
 325              	.LFE6:
 326              		.size	UART_UartSetRxAddressMask, .-UART_UartSetRxAddressMask
 327              		.section	.text.UART_UartPutString,"ax",%progbits
 328              		.align	2
 329              		.global	UART_UartPutString
 330              		.code	16
 331              		.thumb_func
 332              		.type	UART_UartPutString, %function
ARM GAS  C:\Users\owono\AppData\Local\Temp\cc0srShD.s 			page 15


 333              	UART_UartPutString:
 334              	.LFB7:
 467:.\Generated_Source\PSoC4/UART_UART.c **** 
 468:.\Generated_Source\PSoC4/UART_UART.c **** 
 469:.\Generated_Source\PSoC4/UART_UART.c **** #if(UART_UART_RX_DIRECTION)
 470:.\Generated_Source\PSoC4/UART_UART.c ****     /*******************************************************************************
 471:.\Generated_Source\PSoC4/UART_UART.c ****     * Function Name: UART_UartGetChar
 472:.\Generated_Source\PSoC4/UART_UART.c ****     ****************************************************************************//**
 473:.\Generated_Source\PSoC4/UART_UART.c ****     *
 474:.\Generated_Source\PSoC4/UART_UART.c ****     *  Retrieves next data element from receive buffer.
 475:.\Generated_Source\PSoC4/UART_UART.c ****     *  This function is designed for ASCII characters and returns a char where
 476:.\Generated_Source\PSoC4/UART_UART.c ****     *  1 to 255 are valid characters and 0 indicates an error occurred or no data
 477:.\Generated_Source\PSoC4/UART_UART.c ****     *  is present.
 478:.\Generated_Source\PSoC4/UART_UART.c ****     *  - RX software buffer is disabled: Returns data element retrieved from RX
 479:.\Generated_Source\PSoC4/UART_UART.c ****     *    FIFO.
 480:.\Generated_Source\PSoC4/UART_UART.c ****     *  - RX software buffer is enabled: Returns data element from the software
 481:.\Generated_Source\PSoC4/UART_UART.c ****     *    receive buffer.
 482:.\Generated_Source\PSoC4/UART_UART.c ****     *
 483:.\Generated_Source\PSoC4/UART_UART.c ****     *  \return
 484:.\Generated_Source\PSoC4/UART_UART.c ****     *   Next data element from the receive buffer. ASCII character values from
 485:.\Generated_Source\PSoC4/UART_UART.c ****     *   1 to 255 are valid. A returned zero signifies an error condition or no
 486:.\Generated_Source\PSoC4/UART_UART.c ****     *   data available.
 487:.\Generated_Source\PSoC4/UART_UART.c ****     *
 488:.\Generated_Source\PSoC4/UART_UART.c ****     *  \sideeffect
 489:.\Generated_Source\PSoC4/UART_UART.c ****     *   The errors bits may not correspond with reading characters due to
 490:.\Generated_Source\PSoC4/UART_UART.c ****     *   RX FIFO and software buffer usage.
 491:.\Generated_Source\PSoC4/UART_UART.c ****     *   RX software buffer is enabled: The internal software buffer overflow
 492:.\Generated_Source\PSoC4/UART_UART.c ****     *   is not treated as an error condition.
 493:.\Generated_Source\PSoC4/UART_UART.c ****     *   Check UART_rxBufferOverflow to capture that error condition.
 494:.\Generated_Source\PSoC4/UART_UART.c ****     *
 495:.\Generated_Source\PSoC4/UART_UART.c ****     *******************************************************************************/
 496:.\Generated_Source\PSoC4/UART_UART.c ****     uint32 UART_UartGetChar(void)
 497:.\Generated_Source\PSoC4/UART_UART.c ****     {
 498:.\Generated_Source\PSoC4/UART_UART.c ****         uint32 rxData = 0u;
 499:.\Generated_Source\PSoC4/UART_UART.c **** 
 500:.\Generated_Source\PSoC4/UART_UART.c ****         /* Reads data only if there is data to read */
 501:.\Generated_Source\PSoC4/UART_UART.c ****         if (0u != UART_SpiUartGetRxBufferSize())
 502:.\Generated_Source\PSoC4/UART_UART.c ****         {
 503:.\Generated_Source\PSoC4/UART_UART.c ****             rxData = UART_SpiUartReadRxData();
 504:.\Generated_Source\PSoC4/UART_UART.c ****         }
 505:.\Generated_Source\PSoC4/UART_UART.c **** 
 506:.\Generated_Source\PSoC4/UART_UART.c ****         if (UART_CHECK_INTR_RX(UART_INTR_RX_ERR))
 507:.\Generated_Source\PSoC4/UART_UART.c ****         {
 508:.\Generated_Source\PSoC4/UART_UART.c ****             rxData = 0u; /* Error occurred: returns zero */
 509:.\Generated_Source\PSoC4/UART_UART.c ****             UART_ClearRxInterruptSource(UART_INTR_RX_ERR);
 510:.\Generated_Source\PSoC4/UART_UART.c ****         }
 511:.\Generated_Source\PSoC4/UART_UART.c **** 
 512:.\Generated_Source\PSoC4/UART_UART.c ****         return (rxData);
 513:.\Generated_Source\PSoC4/UART_UART.c ****     }
 514:.\Generated_Source\PSoC4/UART_UART.c **** 
 515:.\Generated_Source\PSoC4/UART_UART.c **** 
 516:.\Generated_Source\PSoC4/UART_UART.c ****     /*******************************************************************************
 517:.\Generated_Source\PSoC4/UART_UART.c ****     * Function Name: UART_UartGetByte
 518:.\Generated_Source\PSoC4/UART_UART.c ****     ****************************************************************************//**
 519:.\Generated_Source\PSoC4/UART_UART.c ****     *
 520:.\Generated_Source\PSoC4/UART_UART.c ****     *  Retrieves the next data element from the receive buffer, returns the
 521:.\Generated_Source\PSoC4/UART_UART.c ****     *  received byte and error condition.
ARM GAS  C:\Users\owono\AppData\Local\Temp\cc0srShD.s 			page 16


 522:.\Generated_Source\PSoC4/UART_UART.c ****     *   - The RX software buffer is disabled: returns the data element retrieved
 523:.\Generated_Source\PSoC4/UART_UART.c ****     *     from the RX FIFO. Undefined data will be returned if the RX FIFO is
 524:.\Generated_Source\PSoC4/UART_UART.c ****     *     empty.
 525:.\Generated_Source\PSoC4/UART_UART.c ****     *   - The RX software buffer is enabled: returns data element from the
 526:.\Generated_Source\PSoC4/UART_UART.c ****     *     software receive buffer.
 527:.\Generated_Source\PSoC4/UART_UART.c ****     *
 528:.\Generated_Source\PSoC4/UART_UART.c ****     *  \return
 529:.\Generated_Source\PSoC4/UART_UART.c ****     *   Bits 7-0 contain the next data element from the receive buffer and
 530:.\Generated_Source\PSoC4/UART_UART.c ****     *   other bits contain the error condition.
 531:.\Generated_Source\PSoC4/UART_UART.c ****     *   - UART_UART_RX_OVERFLOW - Attempt to write to a full
 532:.\Generated_Source\PSoC4/UART_UART.c ****     *     receiver FIFO.
 533:.\Generated_Source\PSoC4/UART_UART.c ****     *   - UART_UART_RX_UNDERFLOW	Attempt to read from an empty
 534:.\Generated_Source\PSoC4/UART_UART.c ****     *     receiver FIFO.
 535:.\Generated_Source\PSoC4/UART_UART.c ****     *   - UART_UART_RX_FRAME_ERROR - UART framing error detected.
 536:.\Generated_Source\PSoC4/UART_UART.c ****     *   - UART_UART_RX_PARITY_ERROR - UART parity error detected.
 537:.\Generated_Source\PSoC4/UART_UART.c ****     *
 538:.\Generated_Source\PSoC4/UART_UART.c ****     *  \sideeffect
 539:.\Generated_Source\PSoC4/UART_UART.c ****     *   The errors bits may not correspond with reading characters due to
 540:.\Generated_Source\PSoC4/UART_UART.c ****     *   RX FIFO and software buffer usage.
 541:.\Generated_Source\PSoC4/UART_UART.c ****     *   RX software buffer is enabled: The internal software buffer overflow
 542:.\Generated_Source\PSoC4/UART_UART.c ****     *   is not treated as an error condition.
 543:.\Generated_Source\PSoC4/UART_UART.c ****     *   Check UART_rxBufferOverflow to capture that error condition.
 544:.\Generated_Source\PSoC4/UART_UART.c ****     *
 545:.\Generated_Source\PSoC4/UART_UART.c ****     *******************************************************************************/
 546:.\Generated_Source\PSoC4/UART_UART.c ****     uint32 UART_UartGetByte(void)
 547:.\Generated_Source\PSoC4/UART_UART.c ****     {
 548:.\Generated_Source\PSoC4/UART_UART.c ****         uint32 rxData;
 549:.\Generated_Source\PSoC4/UART_UART.c ****         uint32 tmpStatus;
 550:.\Generated_Source\PSoC4/UART_UART.c **** 
 551:.\Generated_Source\PSoC4/UART_UART.c ****         #if (UART_CHECK_RX_SW_BUFFER)
 552:.\Generated_Source\PSoC4/UART_UART.c ****         {
 553:.\Generated_Source\PSoC4/UART_UART.c ****             UART_DisableInt();
 554:.\Generated_Source\PSoC4/UART_UART.c ****         }
 555:.\Generated_Source\PSoC4/UART_UART.c ****         #endif
 556:.\Generated_Source\PSoC4/UART_UART.c **** 
 557:.\Generated_Source\PSoC4/UART_UART.c ****         if (0u != UART_SpiUartGetRxBufferSize())
 558:.\Generated_Source\PSoC4/UART_UART.c ****         {
 559:.\Generated_Source\PSoC4/UART_UART.c ****             /* Enables interrupt to receive more bytes: at least one byte is in
 560:.\Generated_Source\PSoC4/UART_UART.c ****             * buffer.
 561:.\Generated_Source\PSoC4/UART_UART.c ****             */
 562:.\Generated_Source\PSoC4/UART_UART.c ****             #if (UART_CHECK_RX_SW_BUFFER)
 563:.\Generated_Source\PSoC4/UART_UART.c ****             {
 564:.\Generated_Source\PSoC4/UART_UART.c ****                 UART_EnableInt();
 565:.\Generated_Source\PSoC4/UART_UART.c ****             }
 566:.\Generated_Source\PSoC4/UART_UART.c ****             #endif
 567:.\Generated_Source\PSoC4/UART_UART.c **** 
 568:.\Generated_Source\PSoC4/UART_UART.c ****             /* Get received byte */
 569:.\Generated_Source\PSoC4/UART_UART.c ****             rxData = UART_SpiUartReadRxData();
 570:.\Generated_Source\PSoC4/UART_UART.c ****         }
 571:.\Generated_Source\PSoC4/UART_UART.c ****         else
 572:.\Generated_Source\PSoC4/UART_UART.c ****         {
 573:.\Generated_Source\PSoC4/UART_UART.c ****             /* Reads a byte directly from RX FIFO: underflow is raised in the
 574:.\Generated_Source\PSoC4/UART_UART.c ****             * case of empty. Otherwise the first received byte will be read.
 575:.\Generated_Source\PSoC4/UART_UART.c ****             */
 576:.\Generated_Source\PSoC4/UART_UART.c ****             rxData = UART_RX_FIFO_RD_REG;
 577:.\Generated_Source\PSoC4/UART_UART.c **** 
 578:.\Generated_Source\PSoC4/UART_UART.c **** 
ARM GAS  C:\Users\owono\AppData\Local\Temp\cc0srShD.s 			page 17


 579:.\Generated_Source\PSoC4/UART_UART.c ****             /* Enables interrupt to receive more bytes. */
 580:.\Generated_Source\PSoC4/UART_UART.c ****             #if (UART_CHECK_RX_SW_BUFFER)
 581:.\Generated_Source\PSoC4/UART_UART.c ****             {
 582:.\Generated_Source\PSoC4/UART_UART.c **** 
 583:.\Generated_Source\PSoC4/UART_UART.c ****                 /* The byte has been read from RX FIFO. Clear RX interrupt to
 584:.\Generated_Source\PSoC4/UART_UART.c ****                 * not involve interrupt handler when RX FIFO is empty.
 585:.\Generated_Source\PSoC4/UART_UART.c ****                 */
 586:.\Generated_Source\PSoC4/UART_UART.c ****                 UART_ClearRxInterruptSource(UART_INTR_RX_NOT_EMPTY);
 587:.\Generated_Source\PSoC4/UART_UART.c **** 
 588:.\Generated_Source\PSoC4/UART_UART.c ****                 UART_EnableInt();
 589:.\Generated_Source\PSoC4/UART_UART.c ****             }
 590:.\Generated_Source\PSoC4/UART_UART.c ****             #endif
 591:.\Generated_Source\PSoC4/UART_UART.c ****         }
 592:.\Generated_Source\PSoC4/UART_UART.c **** 
 593:.\Generated_Source\PSoC4/UART_UART.c ****         /* Get and clear RX error mask */
 594:.\Generated_Source\PSoC4/UART_UART.c ****         tmpStatus = (UART_GetRxInterruptSource() & UART_INTR_RX_ERR);
 595:.\Generated_Source\PSoC4/UART_UART.c ****         UART_ClearRxInterruptSource(UART_INTR_RX_ERR);
 596:.\Generated_Source\PSoC4/UART_UART.c **** 
 597:.\Generated_Source\PSoC4/UART_UART.c ****         /* Puts together data and error status:
 598:.\Generated_Source\PSoC4/UART_UART.c ****         * MP mode and accept address: 9th bit is set to notify mark.
 599:.\Generated_Source\PSoC4/UART_UART.c ****         */
 600:.\Generated_Source\PSoC4/UART_UART.c ****         rxData |= ((uint32) (tmpStatus << 8u));
 601:.\Generated_Source\PSoC4/UART_UART.c **** 
 602:.\Generated_Source\PSoC4/UART_UART.c ****         return (rxData);
 603:.\Generated_Source\PSoC4/UART_UART.c ****     }
 604:.\Generated_Source\PSoC4/UART_UART.c **** 
 605:.\Generated_Source\PSoC4/UART_UART.c **** 
 606:.\Generated_Source\PSoC4/UART_UART.c ****     #if !(UART_CY_SCBIP_V0 || UART_CY_SCBIP_V1)
 607:.\Generated_Source\PSoC4/UART_UART.c ****         /*******************************************************************************
 608:.\Generated_Source\PSoC4/UART_UART.c ****         * Function Name: UART_UartSetRtsPolarity
 609:.\Generated_Source\PSoC4/UART_UART.c ****         ****************************************************************************//**
 610:.\Generated_Source\PSoC4/UART_UART.c ****         *
 611:.\Generated_Source\PSoC4/UART_UART.c ****         *  Sets active polarity of RTS output signal.
 612:.\Generated_Source\PSoC4/UART_UART.c ****         *  Only available for PSoC 4100 BLE / PSoC 4200 BLE / PSoC 4100M / PSoC 4200M /
 613:.\Generated_Source\PSoC4/UART_UART.c ****         *  PSoC 4200L / PSoC 4000S / PSoC 4100S / PSoC Analog Coprocessor devices.
 614:.\Generated_Source\PSoC4/UART_UART.c ****         *
 615:.\Generated_Source\PSoC4/UART_UART.c ****         *  \param polarity: Active polarity of RTS output signal.
 616:.\Generated_Source\PSoC4/UART_UART.c ****         *   - UART_UART_RTS_ACTIVE_LOW  - RTS signal is active low.
 617:.\Generated_Source\PSoC4/UART_UART.c ****         *   - UART_UART_RTS_ACTIVE_HIGH - RTS signal is active high.
 618:.\Generated_Source\PSoC4/UART_UART.c ****         *
 619:.\Generated_Source\PSoC4/UART_UART.c ****         *******************************************************************************/
 620:.\Generated_Source\PSoC4/UART_UART.c ****         void UART_UartSetRtsPolarity(uint32 polarity)
 621:.\Generated_Source\PSoC4/UART_UART.c ****         {
 622:.\Generated_Source\PSoC4/UART_UART.c ****             if(0u != polarity)
 623:.\Generated_Source\PSoC4/UART_UART.c ****             {
 624:.\Generated_Source\PSoC4/UART_UART.c ****                 UART_UART_FLOW_CTRL_REG |= (uint32)  UART_UART_FLOW_CTRL_RTS_POLARITY;
 625:.\Generated_Source\PSoC4/UART_UART.c ****             }
 626:.\Generated_Source\PSoC4/UART_UART.c ****             else
 627:.\Generated_Source\PSoC4/UART_UART.c ****             {
 628:.\Generated_Source\PSoC4/UART_UART.c ****                 UART_UART_FLOW_CTRL_REG &= (uint32) ~UART_UART_FLOW_CTRL_RTS_POLARITY;
 629:.\Generated_Source\PSoC4/UART_UART.c ****             }
 630:.\Generated_Source\PSoC4/UART_UART.c ****         }
 631:.\Generated_Source\PSoC4/UART_UART.c **** 
 632:.\Generated_Source\PSoC4/UART_UART.c **** 
 633:.\Generated_Source\PSoC4/UART_UART.c ****         /*******************************************************************************
 634:.\Generated_Source\PSoC4/UART_UART.c ****         * Function Name: UART_UartSetRtsFifoLevel
 635:.\Generated_Source\PSoC4/UART_UART.c ****         ****************************************************************************//**
ARM GAS  C:\Users\owono\AppData\Local\Temp\cc0srShD.s 			page 18


 636:.\Generated_Source\PSoC4/UART_UART.c ****         *
 637:.\Generated_Source\PSoC4/UART_UART.c ****         *  Sets level in the RX FIFO for RTS signal activation.
 638:.\Generated_Source\PSoC4/UART_UART.c ****         *  While the RX FIFO has fewer entries than the RX FIFO level the RTS signal
 639:.\Generated_Source\PSoC4/UART_UART.c ****         *  remains active, otherwise the RTS signal becomes inactive.
 640:.\Generated_Source\PSoC4/UART_UART.c ****         *  Only available for PSoC 4100 BLE / PSoC 4200 BLE / PSoC 4100M / PSoC 4200M /
 641:.\Generated_Source\PSoC4/UART_UART.c ****         *  PSoC 4200L / PSoC 4000S / PSoC 4100S / PSoC Analog Coprocessor devices.
 642:.\Generated_Source\PSoC4/UART_UART.c ****         *
 643:.\Generated_Source\PSoC4/UART_UART.c ****         *  \param level: Level in the RX FIFO for RTS signal activation.
 644:.\Generated_Source\PSoC4/UART_UART.c ****         *   The range of valid level values is between 0 and RX FIFO depth - 1.
 645:.\Generated_Source\PSoC4/UART_UART.c ****         *   Setting level value to 0 disables RTS signal activation.
 646:.\Generated_Source\PSoC4/UART_UART.c ****         *
 647:.\Generated_Source\PSoC4/UART_UART.c ****         *******************************************************************************/
 648:.\Generated_Source\PSoC4/UART_UART.c ****         void UART_UartSetRtsFifoLevel(uint32 level)
 649:.\Generated_Source\PSoC4/UART_UART.c ****         {
 650:.\Generated_Source\PSoC4/UART_UART.c ****             uint32 uartFlowCtrl;
 651:.\Generated_Source\PSoC4/UART_UART.c **** 
 652:.\Generated_Source\PSoC4/UART_UART.c ****             uartFlowCtrl = UART_UART_FLOW_CTRL_REG;
 653:.\Generated_Source\PSoC4/UART_UART.c **** 
 654:.\Generated_Source\PSoC4/UART_UART.c ****             uartFlowCtrl &= ((uint32) ~UART_UART_FLOW_CTRL_TRIGGER_LEVEL_MASK); /* Clear level mask
 655:.\Generated_Source\PSoC4/UART_UART.c ****             uartFlowCtrl |= ((uint32) (UART_UART_FLOW_CTRL_TRIGGER_LEVEL_MASK & level));
 656:.\Generated_Source\PSoC4/UART_UART.c **** 
 657:.\Generated_Source\PSoC4/UART_UART.c ****             UART_UART_FLOW_CTRL_REG = uartFlowCtrl;
 658:.\Generated_Source\PSoC4/UART_UART.c ****         }
 659:.\Generated_Source\PSoC4/UART_UART.c ****     #endif /* !(UART_CY_SCBIP_V0 || UART_CY_SCBIP_V1) */
 660:.\Generated_Source\PSoC4/UART_UART.c **** 
 661:.\Generated_Source\PSoC4/UART_UART.c **** #endif /* (UART_UART_RX_DIRECTION) */
 662:.\Generated_Source\PSoC4/UART_UART.c **** 
 663:.\Generated_Source\PSoC4/UART_UART.c **** 
 664:.\Generated_Source\PSoC4/UART_UART.c **** #if(UART_UART_TX_DIRECTION)
 665:.\Generated_Source\PSoC4/UART_UART.c ****     /*******************************************************************************
 666:.\Generated_Source\PSoC4/UART_UART.c ****     * Function Name: UART_UartPutString
 667:.\Generated_Source\PSoC4/UART_UART.c ****     ****************************************************************************//**
 668:.\Generated_Source\PSoC4/UART_UART.c ****     *
 669:.\Generated_Source\PSoC4/UART_UART.c ****     *  Places a NULL terminated string in the transmit buffer to be sent at the
 670:.\Generated_Source\PSoC4/UART_UART.c ****     *  next available bus time.
 671:.\Generated_Source\PSoC4/UART_UART.c ****     *  This function is blocking and waits until there is a space available to put
 672:.\Generated_Source\PSoC4/UART_UART.c ****     *  requested data in transmit buffer.
 673:.\Generated_Source\PSoC4/UART_UART.c ****     *
 674:.\Generated_Source\PSoC4/UART_UART.c ****     *  \param string: pointer to the null terminated string array to be placed in the
 675:.\Generated_Source\PSoC4/UART_UART.c ****     *   transmit buffer.
 676:.\Generated_Source\PSoC4/UART_UART.c ****     *
 677:.\Generated_Source\PSoC4/UART_UART.c ****     *******************************************************************************/
 678:.\Generated_Source\PSoC4/UART_UART.c ****     void UART_UartPutString(const char8 string[])
 679:.\Generated_Source\PSoC4/UART_UART.c ****     {
 335              		.loc 1 679 0
 336              		.cfi_startproc
 337 0000 80B5     		push	{r7, lr}
 338              		.cfi_def_cfa_offset 8
 339              		.cfi_offset 7, -8
 340              		.cfi_offset 14, -4
 341 0002 84B0     		sub	sp, sp, #16
 342              		.cfi_def_cfa_offset 24
 343 0004 00AF     		add	r7, sp, #0
 344              		.cfi_def_cfa_register 7
 345 0006 7860     		str	r0, [r7, #4]
 680:.\Generated_Source\PSoC4/UART_UART.c ****         uint32 bufIndex;
 681:.\Generated_Source\PSoC4/UART_UART.c **** 
ARM GAS  C:\Users\owono\AppData\Local\Temp\cc0srShD.s 			page 19


 682:.\Generated_Source\PSoC4/UART_UART.c ****         bufIndex = 0u;
 346              		.loc 1 682 0
 347 0008 0023     		mov	r3, #0
 348 000a FB60     		str	r3, [r7, #12]
 683:.\Generated_Source\PSoC4/UART_UART.c **** 
 684:.\Generated_Source\PSoC4/UART_UART.c ****         /* Blocks the control flow until all data has been sent */
 685:.\Generated_Source\PSoC4/UART_UART.c ****         while(string[bufIndex] != ((char8) 0))
 349              		.loc 1 685 0
 350 000c 09E0     		b	.L17
 351              	.L18:
 686:.\Generated_Source\PSoC4/UART_UART.c ****         {
 687:.\Generated_Source\PSoC4/UART_UART.c ****             UART_UartPutChar((uint32) string[bufIndex]);
 352              		.loc 1 687 0
 353 000e 7A68     		ldr	r2, [r7, #4]
 354 0010 FB68     		ldr	r3, [r7, #12]
 355 0012 D318     		add	r3, r2, r3
 356 0014 1B78     		ldrb	r3, [r3]
 357 0016 181C     		mov	r0, r3
 358 0018 FFF7FEFF 		bl	UART_SpiUartWriteTxData
 688:.\Generated_Source\PSoC4/UART_UART.c ****             bufIndex++;
 359              		.loc 1 688 0
 360 001c FB68     		ldr	r3, [r7, #12]
 361 001e 0133     		add	r3, r3, #1
 362 0020 FB60     		str	r3, [r7, #12]
 363              	.L17:
 685:.\Generated_Source\PSoC4/UART_UART.c ****         {
 364              		.loc 1 685 0
 365 0022 7A68     		ldr	r2, [r7, #4]
 366 0024 FB68     		ldr	r3, [r7, #12]
 367 0026 D318     		add	r3, r2, r3
 368 0028 1B78     		ldrb	r3, [r3]
 369 002a 002B     		cmp	r3, #0
 370 002c EFD1     		bne	.L18
 689:.\Generated_Source\PSoC4/UART_UART.c ****         }
 690:.\Generated_Source\PSoC4/UART_UART.c ****     }
 371              		.loc 1 690 0
 372 002e BD46     		mov	sp, r7
 373 0030 04B0     		add	sp, sp, #16
 374              		@ sp needed
 375 0032 80BD     		pop	{r7, pc}
 376              		.cfi_endproc
 377              	.LFE7:
 378              		.size	UART_UartPutString, .-UART_UartPutString
 379              		.section	.text.UART_UartPutCRLF,"ax",%progbits
 380              		.align	2
 381              		.global	UART_UartPutCRLF
 382              		.code	16
 383              		.thumb_func
 384              		.type	UART_UartPutCRLF, %function
 385              	UART_UartPutCRLF:
 386              	.LFB8:
 691:.\Generated_Source\PSoC4/UART_UART.c **** 
 692:.\Generated_Source\PSoC4/UART_UART.c **** 
 693:.\Generated_Source\PSoC4/UART_UART.c ****     /*******************************************************************************
 694:.\Generated_Source\PSoC4/UART_UART.c ****     * Function Name: UART_UartPutCRLF
 695:.\Generated_Source\PSoC4/UART_UART.c ****     ****************************************************************************//**
 696:.\Generated_Source\PSoC4/UART_UART.c ****     *
ARM GAS  C:\Users\owono\AppData\Local\Temp\cc0srShD.s 			page 20


 697:.\Generated_Source\PSoC4/UART_UART.c ****     *  Places byte of data followed by a carriage return (0x0D) and line feed
 698:.\Generated_Source\PSoC4/UART_UART.c ****     *  (0x0A) in the transmit buffer.
 699:.\Generated_Source\PSoC4/UART_UART.c ****     *  This function is blocking and waits until there is a space available to put
 700:.\Generated_Source\PSoC4/UART_UART.c ****     *  all requested data in transmit buffer.
 701:.\Generated_Source\PSoC4/UART_UART.c ****     *
 702:.\Generated_Source\PSoC4/UART_UART.c ****     *  \param txDataByte: the data to be transmitted.
 703:.\Generated_Source\PSoC4/UART_UART.c ****     *
 704:.\Generated_Source\PSoC4/UART_UART.c ****     *******************************************************************************/
 705:.\Generated_Source\PSoC4/UART_UART.c ****     void UART_UartPutCRLF(uint32 txDataByte)
 706:.\Generated_Source\PSoC4/UART_UART.c ****     {
 387              		.loc 1 706 0
 388              		.cfi_startproc
 389 0000 80B5     		push	{r7, lr}
 390              		.cfi_def_cfa_offset 8
 391              		.cfi_offset 7, -8
 392              		.cfi_offset 14, -4
 393 0002 82B0     		sub	sp, sp, #8
 394              		.cfi_def_cfa_offset 16
 395 0004 00AF     		add	r7, sp, #0
 396              		.cfi_def_cfa_register 7
 397 0006 7860     		str	r0, [r7, #4]
 707:.\Generated_Source\PSoC4/UART_UART.c ****         UART_UartPutChar(txDataByte);  /* Blocks control flow until all data has been sent */
 398              		.loc 1 707 0
 399 0008 7B68     		ldr	r3, [r7, #4]
 400 000a 181C     		mov	r0, r3
 401 000c FFF7FEFF 		bl	UART_SpiUartWriteTxData
 708:.\Generated_Source\PSoC4/UART_UART.c ****         UART_UartPutChar(0x0Du);       /* Blocks control flow until all data has been sent */
 402              		.loc 1 708 0
 403 0010 0D20     		mov	r0, #13
 404 0012 FFF7FEFF 		bl	UART_SpiUartWriteTxData
 709:.\Generated_Source\PSoC4/UART_UART.c ****         UART_UartPutChar(0x0Au);       /* Blocks control flow until all data has been sent */
 405              		.loc 1 709 0
 406 0016 0A20     		mov	r0, #10
 407 0018 FFF7FEFF 		bl	UART_SpiUartWriteTxData
 710:.\Generated_Source\PSoC4/UART_UART.c ****     }
 408              		.loc 1 710 0
 409 001c BD46     		mov	sp, r7
 410 001e 02B0     		add	sp, sp, #8
 411              		@ sp needed
 412 0020 80BD     		pop	{r7, pc}
 413              		.cfi_endproc
 414              	.LFE8:
 415              		.size	UART_UartPutCRLF, .-UART_UartPutCRLF
 416 0022 C046     		.section	.text.UART_UartEnableCts,"ax",%progbits
 417              		.align	2
 418              		.global	UART_UartEnableCts
 419              		.code	16
 420              		.thumb_func
 421              		.type	UART_UartEnableCts, %function
 422              	UART_UartEnableCts:
 423              	.LFB9:
 711:.\Generated_Source\PSoC4/UART_UART.c **** 
 712:.\Generated_Source\PSoC4/UART_UART.c **** 
 713:.\Generated_Source\PSoC4/UART_UART.c ****     #if !(UART_CY_SCBIP_V0 || UART_CY_SCBIP_V1)
 714:.\Generated_Source\PSoC4/UART_UART.c ****         /*******************************************************************************
 715:.\Generated_Source\PSoC4/UART_UART.c ****         * Function Name: UARTSCB_UartEnableCts
 716:.\Generated_Source\PSoC4/UART_UART.c ****         ****************************************************************************//**
ARM GAS  C:\Users\owono\AppData\Local\Temp\cc0srShD.s 			page 21


 717:.\Generated_Source\PSoC4/UART_UART.c ****         *
 718:.\Generated_Source\PSoC4/UART_UART.c ****         *  Enables usage of CTS input signal by the UART transmitter.
 719:.\Generated_Source\PSoC4/UART_UART.c ****         *  Only available for PSoC 4100 BLE / PSoC 4200 BLE / PSoC 4100M / PSoC 4200M /
 720:.\Generated_Source\PSoC4/UART_UART.c ****         *  PSoC 4200L / PSoC 4000S / PSoC 4100S / PSoC Analog Coprocessor devices.
 721:.\Generated_Source\PSoC4/UART_UART.c ****         *
 722:.\Generated_Source\PSoC4/UART_UART.c ****         *******************************************************************************/
 723:.\Generated_Source\PSoC4/UART_UART.c ****         void UART_UartEnableCts(void)
 724:.\Generated_Source\PSoC4/UART_UART.c ****         {
 424              		.loc 1 724 0
 425              		.cfi_startproc
 426 0000 80B5     		push	{r7, lr}
 427              		.cfi_def_cfa_offset 8
 428              		.cfi_offset 7, -8
 429              		.cfi_offset 14, -4
 430 0002 00AF     		add	r7, sp, #0
 431              		.cfi_def_cfa_register 7
 725:.\Generated_Source\PSoC4/UART_UART.c ****             UART_UART_FLOW_CTRL_REG |= (uint32)  UART_UART_FLOW_CTRL_CTS_ENABLE;
 432              		.loc 1 725 0
 433 0004 044B     		ldr	r3, .L21
 434 0006 044A     		ldr	r2, .L21
 435 0008 1268     		ldr	r2, [r2]
 436 000a 8021     		mov	r1, #128
 437 000c 8904     		lsl	r1, r1, #18
 438 000e 0A43     		orr	r2, r1
 439 0010 1A60     		str	r2, [r3]
 726:.\Generated_Source\PSoC4/UART_UART.c ****         }
 440              		.loc 1 726 0
 441 0012 BD46     		mov	sp, r7
 442              		@ sp needed
 443 0014 80BD     		pop	{r7, pc}
 444              	.L22:
 445 0016 C046     		.align	2
 446              	.L21:
 447 0018 50002440 		.word	1076101200
 448              		.cfi_endproc
 449              	.LFE9:
 450              		.size	UART_UartEnableCts, .-UART_UartEnableCts
 451              		.section	.text.UART_UartDisableCts,"ax",%progbits
 452              		.align	2
 453              		.global	UART_UartDisableCts
 454              		.code	16
 455              		.thumb_func
 456              		.type	UART_UartDisableCts, %function
 457              	UART_UartDisableCts:
 458              	.LFB10:
 727:.\Generated_Source\PSoC4/UART_UART.c **** 
 728:.\Generated_Source\PSoC4/UART_UART.c **** 
 729:.\Generated_Source\PSoC4/UART_UART.c ****         /*******************************************************************************
 730:.\Generated_Source\PSoC4/UART_UART.c ****         * Function Name: UART_UartDisableCts
 731:.\Generated_Source\PSoC4/UART_UART.c ****         ****************************************************************************//**
 732:.\Generated_Source\PSoC4/UART_UART.c ****         *
 733:.\Generated_Source\PSoC4/UART_UART.c ****         *  Disables usage of CTS input signal by the UART transmitter.
 734:.\Generated_Source\PSoC4/UART_UART.c ****         *  Only available for PSoC 4100 BLE / PSoC 4200 BLE / PSoC 4100M / PSoC 4200M /
 735:.\Generated_Source\PSoC4/UART_UART.c ****         *  PSoC 4200L / PSoC 4000S / PSoC 4100S / PSoC Analog Coprocessor devices.
 736:.\Generated_Source\PSoC4/UART_UART.c ****         *
 737:.\Generated_Source\PSoC4/UART_UART.c ****         *******************************************************************************/
 738:.\Generated_Source\PSoC4/UART_UART.c ****         void UART_UartDisableCts(void)
ARM GAS  C:\Users\owono\AppData\Local\Temp\cc0srShD.s 			page 22


 739:.\Generated_Source\PSoC4/UART_UART.c ****         {
 459              		.loc 1 739 0
 460              		.cfi_startproc
 461 0000 80B5     		push	{r7, lr}
 462              		.cfi_def_cfa_offset 8
 463              		.cfi_offset 7, -8
 464              		.cfi_offset 14, -4
 465 0002 00AF     		add	r7, sp, #0
 466              		.cfi_def_cfa_register 7
 740:.\Generated_Source\PSoC4/UART_UART.c ****             UART_UART_FLOW_CTRL_REG &= (uint32) ~UART_UART_FLOW_CTRL_CTS_ENABLE;
 467              		.loc 1 740 0
 468 0004 034B     		ldr	r3, .L24
 469 0006 034A     		ldr	r2, .L24
 470 0008 1268     		ldr	r2, [r2]
 471 000a 0349     		ldr	r1, .L24+4
 472 000c 0A40     		and	r2, r1
 473 000e 1A60     		str	r2, [r3]
 741:.\Generated_Source\PSoC4/UART_UART.c ****         }
 474              		.loc 1 741 0
 475 0010 BD46     		mov	sp, r7
 476              		@ sp needed
 477 0012 80BD     		pop	{r7, pc}
 478              	.L25:
 479              		.align	2
 480              	.L24:
 481 0014 50002440 		.word	1076101200
 482 0018 FFFFFFFD 		.word	-33554433
 483              		.cfi_endproc
 484              	.LFE10:
 485              		.size	UART_UartDisableCts, .-UART_UartDisableCts
 486              		.section	.text.UART_UartSetCtsPolarity,"ax",%progbits
 487              		.align	2
 488              		.global	UART_UartSetCtsPolarity
 489              		.code	16
 490              		.thumb_func
 491              		.type	UART_UartSetCtsPolarity, %function
 492              	UART_UartSetCtsPolarity:
 493              	.LFB11:
 742:.\Generated_Source\PSoC4/UART_UART.c **** 
 743:.\Generated_Source\PSoC4/UART_UART.c **** 
 744:.\Generated_Source\PSoC4/UART_UART.c ****         /*******************************************************************************
 745:.\Generated_Source\PSoC4/UART_UART.c ****         * Function Name: UART_UartSetCtsPolarity
 746:.\Generated_Source\PSoC4/UART_UART.c ****         ****************************************************************************//**
 747:.\Generated_Source\PSoC4/UART_UART.c ****         *
 748:.\Generated_Source\PSoC4/UART_UART.c ****         *  Sets active polarity of CTS input signal.
 749:.\Generated_Source\PSoC4/UART_UART.c ****         *  Only available for PSoC 4100 BLE / PSoC 4200 BLE / PSoC 4100M / PSoC 4200M /
 750:.\Generated_Source\PSoC4/UART_UART.c ****         *  PSoC 4200L / PSoC 4000S / PSoC 4100S / PSoC Analog Coprocessor devices.
 751:.\Generated_Source\PSoC4/UART_UART.c ****         *
 752:.\Generated_Source\PSoC4/UART_UART.c ****         *  \param polarity: Active polarity of CTS output signal.
 753:.\Generated_Source\PSoC4/UART_UART.c ****         *   - UART_UART_CTS_ACTIVE_LOW  - CTS signal is active low.
 754:.\Generated_Source\PSoC4/UART_UART.c ****         *   - UART_UART_CTS_ACTIVE_HIGH - CTS signal is active high.
 755:.\Generated_Source\PSoC4/UART_UART.c ****         *
 756:.\Generated_Source\PSoC4/UART_UART.c ****         *******************************************************************************/
 757:.\Generated_Source\PSoC4/UART_UART.c ****         void UART_UartSetCtsPolarity(uint32 polarity)
 758:.\Generated_Source\PSoC4/UART_UART.c ****         {
 494              		.loc 1 758 0
 495              		.cfi_startproc
ARM GAS  C:\Users\owono\AppData\Local\Temp\cc0srShD.s 			page 23


 496 0000 80B5     		push	{r7, lr}
 497              		.cfi_def_cfa_offset 8
 498              		.cfi_offset 7, -8
 499              		.cfi_offset 14, -4
 500 0002 82B0     		sub	sp, sp, #8
 501              		.cfi_def_cfa_offset 16
 502 0004 00AF     		add	r7, sp, #0
 503              		.cfi_def_cfa_register 7
 504 0006 7860     		str	r0, [r7, #4]
 759:.\Generated_Source\PSoC4/UART_UART.c ****             if (0u != polarity)
 505              		.loc 1 759 0
 506 0008 7B68     		ldr	r3, [r7, #4]
 507 000a 002B     		cmp	r3, #0
 508 000c 07D0     		beq	.L27
 760:.\Generated_Source\PSoC4/UART_UART.c ****             {
 761:.\Generated_Source\PSoC4/UART_UART.c ****                 UART_UART_FLOW_CTRL_REG |= (uint32)  UART_UART_FLOW_CTRL_CTS_POLARITY;
 509              		.loc 1 761 0
 510 000e 084B     		ldr	r3, .L29
 511 0010 074A     		ldr	r2, .L29
 512 0012 1268     		ldr	r2, [r2]
 513 0014 8021     		mov	r1, #128
 514 0016 4904     		lsl	r1, r1, #17
 515 0018 0A43     		orr	r2, r1
 516 001a 1A60     		str	r2, [r3]
 517 001c 05E0     		b	.L26
 518              	.L27:
 762:.\Generated_Source\PSoC4/UART_UART.c ****             }
 763:.\Generated_Source\PSoC4/UART_UART.c ****             else
 764:.\Generated_Source\PSoC4/UART_UART.c ****             {
 765:.\Generated_Source\PSoC4/UART_UART.c ****                 UART_UART_FLOW_CTRL_REG &= (uint32) ~UART_UART_FLOW_CTRL_CTS_POLARITY;
 519              		.loc 1 765 0
 520 001e 044B     		ldr	r3, .L29
 521 0020 034A     		ldr	r2, .L29
 522 0022 1268     		ldr	r2, [r2]
 523 0024 0349     		ldr	r1, .L29+4
 524 0026 0A40     		and	r2, r1
 525 0028 1A60     		str	r2, [r3]
 526              	.L26:
 766:.\Generated_Source\PSoC4/UART_UART.c ****             }
 767:.\Generated_Source\PSoC4/UART_UART.c ****         }
 527              		.loc 1 767 0
 528 002a BD46     		mov	sp, r7
 529 002c 02B0     		add	sp, sp, #8
 530              		@ sp needed
 531 002e 80BD     		pop	{r7, pc}
 532              	.L30:
 533              		.align	2
 534              	.L29:
 535 0030 50002440 		.word	1076101200
 536 0034 FFFFFFFE 		.word	-16777217
 537              		.cfi_endproc
 538              	.LFE11:
 539              		.size	UART_UartSetCtsPolarity, .-UART_UartSetCtsPolarity
 540              		.text
 541              	.Letext0:
 542              		.file 2 "Generated_Source\\PSoC4/cytypes.h"
 543              		.file 3 ".\\Generated_Source\\PSoC4\\UART_PVT.h"
ARM GAS  C:\Users\owono\AppData\Local\Temp\cc0srShD.s 			page 24


 544              		.section	.debug_info,"",%progbits
 545              	.Ldebug_info0:
 546 0000 13020000 		.4byte	0x213
 547 0004 0400     		.2byte	0x4
 548 0006 00000000 		.4byte	.Ldebug_abbrev0
 549 000a 04       		.byte	0x4
 550 000b 01       		.uleb128 0x1
 551 000c A1010000 		.4byte	.LASF34
 552 0010 01       		.byte	0x1
 553 0011 9D020000 		.4byte	.LASF35
 554 0015 59000000 		.4byte	.LASF36
 555 0019 00000000 		.4byte	.Ldebug_ranges0+0
 556 001d 00000000 		.4byte	0
 557 0021 00000000 		.4byte	.Ldebug_line0
 558 0025 02       		.uleb128 0x2
 559 0026 01       		.byte	0x1
 560 0027 06       		.byte	0x6
 561 0028 0E030000 		.4byte	.LASF0
 562 002c 02       		.uleb128 0x2
 563 002d 01       		.byte	0x1
 564 002e 08       		.byte	0x8
 565 002f 0C010000 		.4byte	.LASF1
 566 0033 02       		.uleb128 0x2
 567 0034 02       		.byte	0x2
 568 0035 05       		.byte	0x5
 569 0036 DA020000 		.4byte	.LASF2
 570 003a 02       		.uleb128 0x2
 571 003b 02       		.byte	0x2
 572 003c 07       		.byte	0x7
 573 003d 54010000 		.4byte	.LASF3
 574 0041 02       		.uleb128 0x2
 575 0042 04       		.byte	0x4
 576 0043 05       		.byte	0x5
 577 0044 FC020000 		.4byte	.LASF4
 578 0048 02       		.uleb128 0x2
 579 0049 04       		.byte	0x4
 580 004a 07       		.byte	0x7
 581 004b 34010000 		.4byte	.LASF5
 582 004f 02       		.uleb128 0x2
 583 0050 08       		.byte	0x8
 584 0051 05       		.byte	0x5
 585 0052 00000000 		.4byte	.LASF6
 586 0056 02       		.uleb128 0x2
 587 0057 08       		.byte	0x8
 588 0058 07       		.byte	0x7
 589 0059 60020000 		.4byte	.LASF7
 590 005d 03       		.uleb128 0x3
 591 005e 04       		.byte	0x4
 592 005f 05       		.byte	0x5
 593 0060 696E7400 		.ascii	"int\000"
 594 0064 02       		.uleb128 0x2
 595 0065 04       		.byte	0x4
 596 0066 07       		.byte	0x7
 597 0067 3D020000 		.4byte	.LASF8
 598 006b 04       		.uleb128 0x4
 599 006c 2F020000 		.4byte	.LASF9
 600 0070 02       		.byte	0x2
ARM GAS  C:\Users\owono\AppData\Local\Temp\cc0srShD.s 			page 25


 601 0071 9901     		.2byte	0x199
 602 0073 3A000000 		.4byte	0x3a
 603 0077 04       		.uleb128 0x4
 604 0078 36020000 		.4byte	.LASF10
 605 007c 02       		.byte	0x2
 606 007d 9A01     		.2byte	0x19a
 607 007f 48000000 		.4byte	0x48
 608 0083 02       		.uleb128 0x2
 609 0084 04       		.byte	0x4
 610 0085 04       		.byte	0x4
 611 0086 06010000 		.4byte	.LASF11
 612 008a 02       		.uleb128 0x2
 613 008b 08       		.byte	0x8
 614 008c 04       		.byte	0x4
 615 008d 84010000 		.4byte	.LASF12
 616 0091 04       		.uleb128 0x4
 617 0092 1A010000 		.4byte	.LASF13
 618 0096 02       		.byte	0x2
 619 0097 A901     		.2byte	0x1a9
 620 0099 9D000000 		.4byte	0x9d
 621 009d 02       		.uleb128 0x2
 622 009e 01       		.byte	0x1
 623 009f 08       		.byte	0x8
 624 00a0 D5020000 		.4byte	.LASF14
 625 00a4 04       		.uleb128 0x4
 626 00a5 0E000000 		.4byte	.LASF15
 627 00a9 02       		.byte	0x2
 628 00aa 4402     		.2byte	0x244
 629 00ac B0000000 		.4byte	0xb0
 630 00b0 05       		.uleb128 0x5
 631 00b1 77000000 		.4byte	0x77
 632 00b5 02       		.uleb128 0x2
 633 00b6 04       		.byte	0x4
 634 00b7 07       		.byte	0x7
 635 00b8 89020000 		.4byte	.LASF16
 636 00bc 06       		.uleb128 0x6
 637 00bd 4A020000 		.4byte	.LASF17
 638 00c1 01       		.byte	0x1
 639 00c2 F5       		.byte	0xf5
 640 00c3 00000000 		.4byte	.LFB2
 641 00c7 C0000000 		.4byte	.LFE2-.LFB2
 642 00cb 01       		.uleb128 0x1
 643 00cc 9C       		.byte	0x9c
 644 00cd 07       		.uleb128 0x7
 645 00ce 20010000 		.4byte	.LASF18
 646 00d2 01       		.byte	0x1
 647 00d3 3B01     		.2byte	0x13b
 648 00d5 00000000 		.4byte	.LFB3
 649 00d9 34000000 		.4byte	.LFE3-.LFB3
 650 00dd 01       		.uleb128 0x1
 651 00de 9C       		.byte	0x9c
 652 00df 07       		.uleb128 0x7
 653 00e0 46010000 		.4byte	.LASF19
 654 00e4 01       		.byte	0x1
 655 00e5 6F01     		.2byte	0x16f
 656 00e7 00000000 		.4byte	.LFB4
 657 00eb 38000000 		.4byte	.LFE4-.LFB4
ARM GAS  C:\Users\owono\AppData\Local\Temp\cc0srShD.s 			page 26


 658 00ef 01       		.uleb128 0x1
 659 00f0 9C       		.byte	0x9c
 660 00f1 08       		.uleb128 0x8
 661 00f2 8B010000 		.4byte	.LASF20
 662 00f6 01       		.byte	0x1
 663 00f7 AF01     		.2byte	0x1af
 664 00f9 00000000 		.4byte	.LFB5
 665 00fd 34000000 		.4byte	.LFE5-.LFB5
 666 0101 01       		.uleb128 0x1
 667 0102 9C       		.byte	0x9c
 668 0103 26010000 		.4byte	0x126
 669 0107 09       		.uleb128 0x9
 670 0108 58020000 		.4byte	.LASF22
 671 010c 01       		.byte	0x1
 672 010d AF01     		.2byte	0x1af
 673 010f 77000000 		.4byte	0x77
 674 0113 02       		.uleb128 0x2
 675 0114 91       		.byte	0x91
 676 0115 6C       		.sleb128 -20
 677 0116 0A       		.uleb128 0xa
 678 0117 05030000 		.4byte	.LASF24
 679 011b 01       		.byte	0x1
 680 011c B101     		.2byte	0x1b1
 681 011e 77000000 		.4byte	0x77
 682 0122 02       		.uleb128 0x2
 683 0123 91       		.byte	0x91
 684 0124 74       		.sleb128 -12
 685 0125 00       		.byte	0
 686 0126 08       		.uleb128 0x8
 687 0127 24000000 		.4byte	.LASF21
 688 012b 01       		.byte	0x1
 689 012c C801     		.2byte	0x1c8
 690 012e 00000000 		.4byte	.LFB6
 691 0132 34000000 		.4byte	.LFE6-.LFB6
 692 0136 01       		.uleb128 0x1
 693 0137 9C       		.byte	0x9c
 694 0138 5B010000 		.4byte	0x15b
 695 013c 09       		.uleb128 0x9
 696 013d 78010000 		.4byte	.LASF23
 697 0141 01       		.byte	0x1
 698 0142 C801     		.2byte	0x1c8
 699 0144 77000000 		.4byte	0x77
 700 0148 02       		.uleb128 0x2
 701 0149 91       		.byte	0x91
 702 014a 6C       		.sleb128 -20
 703 014b 0A       		.uleb128 0xa
 704 014c 05030000 		.4byte	.LASF24
 705 0150 01       		.byte	0x1
 706 0151 CA01     		.2byte	0x1ca
 707 0153 77000000 		.4byte	0x77
 708 0157 02       		.uleb128 0x2
 709 0158 91       		.byte	0x91
 710 0159 74       		.sleb128 -12
 711 015a 00       		.byte	0
 712 015b 0B       		.uleb128 0xb
 713 015c F3000000 		.4byte	.LASF25
 714 0160 01       		.byte	0x1
ARM GAS  C:\Users\owono\AppData\Local\Temp\cc0srShD.s 			page 27


 715 0161 A602     		.2byte	0x2a6
 716 0163 00000000 		.4byte	.LFB7
 717 0167 34000000 		.4byte	.LFE7-.LFB7
 718 016b 01       		.uleb128 0x1
 719 016c 9C       		.byte	0x9c
 720 016d 90010000 		.4byte	0x190
 721 0171 09       		.uleb128 0x9
 722 0172 52000000 		.4byte	.LASF26
 723 0176 01       		.byte	0x1
 724 0177 A602     		.2byte	0x2a6
 725 0179 90010000 		.4byte	0x190
 726 017d 02       		.uleb128 0x2
 727 017e 91       		.byte	0x91
 728 017f 6C       		.sleb128 -20
 729 0180 0A       		.uleb128 0xa
 730 0181 80020000 		.4byte	.LASF27
 731 0185 01       		.byte	0x1
 732 0186 A802     		.2byte	0x2a8
 733 0188 77000000 		.4byte	0x77
 734 018c 02       		.uleb128 0x2
 735 018d 91       		.byte	0x91
 736 018e 74       		.sleb128 -12
 737 018f 00       		.byte	0
 738 0190 0C       		.uleb128 0xc
 739 0191 04       		.byte	0x4
 740 0192 96010000 		.4byte	0x196
 741 0196 0D       		.uleb128 0xd
 742 0197 91000000 		.4byte	0x91
 743 019b 0B       		.uleb128 0xb
 744 019c 67010000 		.4byte	.LASF28
 745 01a0 01       		.byte	0x1
 746 01a1 C102     		.2byte	0x2c1
 747 01a3 00000000 		.4byte	.LFB8
 748 01a7 22000000 		.4byte	.LFE8-.LFB8
 749 01ab 01       		.uleb128 0x1
 750 01ac 9C       		.byte	0x9c
 751 01ad C1010000 		.4byte	0x1c1
 752 01b1 09       		.uleb128 0x9
 753 01b2 92020000 		.4byte	.LASF29
 754 01b6 01       		.byte	0x1
 755 01b7 C102     		.2byte	0x2c1
 756 01b9 77000000 		.4byte	0x77
 757 01bd 02       		.uleb128 0x2
 758 01be 91       		.byte	0x91
 759 01bf 74       		.sleb128 -12
 760 01c0 00       		.byte	0
 761 01c1 07       		.uleb128 0x7
 762 01c2 C2020000 		.4byte	.LASF30
 763 01c6 01       		.byte	0x1
 764 01c7 D302     		.2byte	0x2d3
 765 01c9 00000000 		.4byte	.LFB9
 766 01cd 1C000000 		.4byte	.LFE9-.LFB9
 767 01d1 01       		.uleb128 0x1
 768 01d2 9C       		.byte	0x9c
 769 01d3 07       		.uleb128 0x7
 770 01d4 3E000000 		.4byte	.LASF31
 771 01d8 01       		.byte	0x1
ARM GAS  C:\Users\owono\AppData\Local\Temp\cc0srShD.s 			page 28


 772 01d9 E202     		.2byte	0x2e2
 773 01db 00000000 		.4byte	.LFB10
 774 01df 1C000000 		.4byte	.LFE10-.LFB10
 775 01e3 01       		.uleb128 0x1
 776 01e4 9C       		.byte	0x9c
 777 01e5 08       		.uleb128 0x8
 778 01e6 E4020000 		.4byte	.LASF32
 779 01ea 01       		.byte	0x1
 780 01eb F502     		.2byte	0x2f5
 781 01ed 00000000 		.4byte	.LFB11
 782 01f1 38000000 		.4byte	.LFE11-.LFB11
 783 01f5 01       		.uleb128 0x1
 784 01f6 9C       		.byte	0x9c
 785 01f7 0B020000 		.4byte	0x20b
 786 01fb 09       		.uleb128 0x9
 787 01fc 77020000 		.4byte	.LASF33
 788 0200 01       		.byte	0x1
 789 0201 F502     		.2byte	0x2f5
 790 0203 77000000 		.4byte	0x77
 791 0207 02       		.uleb128 0x2
 792 0208 91       		.byte	0x91
 793 0209 74       		.sleb128 -12
 794 020a 00       		.byte	0
 795 020b 0E       		.uleb128 0xe
 796 020c 14000000 		.4byte	.LASF37
 797 0210 03       		.byte	0x3
 798 0211 5B       		.byte	0x5b
 799 0212 6B000000 		.4byte	0x6b
 800 0216 00       		.byte	0
 801              		.section	.debug_abbrev,"",%progbits
 802              	.Ldebug_abbrev0:
 803 0000 01       		.uleb128 0x1
 804 0001 11       		.uleb128 0x11
 805 0002 01       		.byte	0x1
 806 0003 25       		.uleb128 0x25
 807 0004 0E       		.uleb128 0xe
 808 0005 13       		.uleb128 0x13
 809 0006 0B       		.uleb128 0xb
 810 0007 03       		.uleb128 0x3
 811 0008 0E       		.uleb128 0xe
 812 0009 1B       		.uleb128 0x1b
 813 000a 0E       		.uleb128 0xe
 814 000b 55       		.uleb128 0x55
 815 000c 17       		.uleb128 0x17
 816 000d 11       		.uleb128 0x11
 817 000e 01       		.uleb128 0x1
 818 000f 10       		.uleb128 0x10
 819 0010 17       		.uleb128 0x17
 820 0011 00       		.byte	0
 821 0012 00       		.byte	0
 822 0013 02       		.uleb128 0x2
 823 0014 24       		.uleb128 0x24
 824 0015 00       		.byte	0
 825 0016 0B       		.uleb128 0xb
 826 0017 0B       		.uleb128 0xb
 827 0018 3E       		.uleb128 0x3e
 828 0019 0B       		.uleb128 0xb
ARM GAS  C:\Users\owono\AppData\Local\Temp\cc0srShD.s 			page 29


 829 001a 03       		.uleb128 0x3
 830 001b 0E       		.uleb128 0xe
 831 001c 00       		.byte	0
 832 001d 00       		.byte	0
 833 001e 03       		.uleb128 0x3
 834 001f 24       		.uleb128 0x24
 835 0020 00       		.byte	0
 836 0021 0B       		.uleb128 0xb
 837 0022 0B       		.uleb128 0xb
 838 0023 3E       		.uleb128 0x3e
 839 0024 0B       		.uleb128 0xb
 840 0025 03       		.uleb128 0x3
 841 0026 08       		.uleb128 0x8
 842 0027 00       		.byte	0
 843 0028 00       		.byte	0
 844 0029 04       		.uleb128 0x4
 845 002a 16       		.uleb128 0x16
 846 002b 00       		.byte	0
 847 002c 03       		.uleb128 0x3
 848 002d 0E       		.uleb128 0xe
 849 002e 3A       		.uleb128 0x3a
 850 002f 0B       		.uleb128 0xb
 851 0030 3B       		.uleb128 0x3b
 852 0031 05       		.uleb128 0x5
 853 0032 49       		.uleb128 0x49
 854 0033 13       		.uleb128 0x13
 855 0034 00       		.byte	0
 856 0035 00       		.byte	0
 857 0036 05       		.uleb128 0x5
 858 0037 35       		.uleb128 0x35
 859 0038 00       		.byte	0
 860 0039 49       		.uleb128 0x49
 861 003a 13       		.uleb128 0x13
 862 003b 00       		.byte	0
 863 003c 00       		.byte	0
 864 003d 06       		.uleb128 0x6
 865 003e 2E       		.uleb128 0x2e
 866 003f 00       		.byte	0
 867 0040 3F       		.uleb128 0x3f
 868 0041 19       		.uleb128 0x19
 869 0042 03       		.uleb128 0x3
 870 0043 0E       		.uleb128 0xe
 871 0044 3A       		.uleb128 0x3a
 872 0045 0B       		.uleb128 0xb
 873 0046 3B       		.uleb128 0x3b
 874 0047 0B       		.uleb128 0xb
 875 0048 27       		.uleb128 0x27
 876 0049 19       		.uleb128 0x19
 877 004a 11       		.uleb128 0x11
 878 004b 01       		.uleb128 0x1
 879 004c 12       		.uleb128 0x12
 880 004d 06       		.uleb128 0x6
 881 004e 40       		.uleb128 0x40
 882 004f 18       		.uleb128 0x18
 883 0050 9742     		.uleb128 0x2117
 884 0052 19       		.uleb128 0x19
 885 0053 00       		.byte	0
ARM GAS  C:\Users\owono\AppData\Local\Temp\cc0srShD.s 			page 30


 886 0054 00       		.byte	0
 887 0055 07       		.uleb128 0x7
 888 0056 2E       		.uleb128 0x2e
 889 0057 00       		.byte	0
 890 0058 3F       		.uleb128 0x3f
 891 0059 19       		.uleb128 0x19
 892 005a 03       		.uleb128 0x3
 893 005b 0E       		.uleb128 0xe
 894 005c 3A       		.uleb128 0x3a
 895 005d 0B       		.uleb128 0xb
 896 005e 3B       		.uleb128 0x3b
 897 005f 05       		.uleb128 0x5
 898 0060 27       		.uleb128 0x27
 899 0061 19       		.uleb128 0x19
 900 0062 11       		.uleb128 0x11
 901 0063 01       		.uleb128 0x1
 902 0064 12       		.uleb128 0x12
 903 0065 06       		.uleb128 0x6
 904 0066 40       		.uleb128 0x40
 905 0067 18       		.uleb128 0x18
 906 0068 9742     		.uleb128 0x2117
 907 006a 19       		.uleb128 0x19
 908 006b 00       		.byte	0
 909 006c 00       		.byte	0
 910 006d 08       		.uleb128 0x8
 911 006e 2E       		.uleb128 0x2e
 912 006f 01       		.byte	0x1
 913 0070 3F       		.uleb128 0x3f
 914 0071 19       		.uleb128 0x19
 915 0072 03       		.uleb128 0x3
 916 0073 0E       		.uleb128 0xe
 917 0074 3A       		.uleb128 0x3a
 918 0075 0B       		.uleb128 0xb
 919 0076 3B       		.uleb128 0x3b
 920 0077 05       		.uleb128 0x5
 921 0078 27       		.uleb128 0x27
 922 0079 19       		.uleb128 0x19
 923 007a 11       		.uleb128 0x11
 924 007b 01       		.uleb128 0x1
 925 007c 12       		.uleb128 0x12
 926 007d 06       		.uleb128 0x6
 927 007e 40       		.uleb128 0x40
 928 007f 18       		.uleb128 0x18
 929 0080 9742     		.uleb128 0x2117
 930 0082 19       		.uleb128 0x19
 931 0083 01       		.uleb128 0x1
 932 0084 13       		.uleb128 0x13
 933 0085 00       		.byte	0
 934 0086 00       		.byte	0
 935 0087 09       		.uleb128 0x9
 936 0088 05       		.uleb128 0x5
 937 0089 00       		.byte	0
 938 008a 03       		.uleb128 0x3
 939 008b 0E       		.uleb128 0xe
 940 008c 3A       		.uleb128 0x3a
 941 008d 0B       		.uleb128 0xb
 942 008e 3B       		.uleb128 0x3b
ARM GAS  C:\Users\owono\AppData\Local\Temp\cc0srShD.s 			page 31


 943 008f 05       		.uleb128 0x5
 944 0090 49       		.uleb128 0x49
 945 0091 13       		.uleb128 0x13
 946 0092 02       		.uleb128 0x2
 947 0093 18       		.uleb128 0x18
 948 0094 00       		.byte	0
 949 0095 00       		.byte	0
 950 0096 0A       		.uleb128 0xa
 951 0097 34       		.uleb128 0x34
 952 0098 00       		.byte	0
 953 0099 03       		.uleb128 0x3
 954 009a 0E       		.uleb128 0xe
 955 009b 3A       		.uleb128 0x3a
 956 009c 0B       		.uleb128 0xb
 957 009d 3B       		.uleb128 0x3b
 958 009e 05       		.uleb128 0x5
 959 009f 49       		.uleb128 0x49
 960 00a0 13       		.uleb128 0x13
 961 00a1 02       		.uleb128 0x2
 962 00a2 18       		.uleb128 0x18
 963 00a3 00       		.byte	0
 964 00a4 00       		.byte	0
 965 00a5 0B       		.uleb128 0xb
 966 00a6 2E       		.uleb128 0x2e
 967 00a7 01       		.byte	0x1
 968 00a8 3F       		.uleb128 0x3f
 969 00a9 19       		.uleb128 0x19
 970 00aa 03       		.uleb128 0x3
 971 00ab 0E       		.uleb128 0xe
 972 00ac 3A       		.uleb128 0x3a
 973 00ad 0B       		.uleb128 0xb
 974 00ae 3B       		.uleb128 0x3b
 975 00af 05       		.uleb128 0x5
 976 00b0 27       		.uleb128 0x27
 977 00b1 19       		.uleb128 0x19
 978 00b2 11       		.uleb128 0x11
 979 00b3 01       		.uleb128 0x1
 980 00b4 12       		.uleb128 0x12
 981 00b5 06       		.uleb128 0x6
 982 00b6 40       		.uleb128 0x40
 983 00b7 18       		.uleb128 0x18
 984 00b8 9642     		.uleb128 0x2116
 985 00ba 19       		.uleb128 0x19
 986 00bb 01       		.uleb128 0x1
 987 00bc 13       		.uleb128 0x13
 988 00bd 00       		.byte	0
 989 00be 00       		.byte	0
 990 00bf 0C       		.uleb128 0xc
 991 00c0 0F       		.uleb128 0xf
 992 00c1 00       		.byte	0
 993 00c2 0B       		.uleb128 0xb
 994 00c3 0B       		.uleb128 0xb
 995 00c4 49       		.uleb128 0x49
 996 00c5 13       		.uleb128 0x13
 997 00c6 00       		.byte	0
 998 00c7 00       		.byte	0
 999 00c8 0D       		.uleb128 0xd
ARM GAS  C:\Users\owono\AppData\Local\Temp\cc0srShD.s 			page 32


 1000 00c9 26       		.uleb128 0x26
 1001 00ca 00       		.byte	0
 1002 00cb 49       		.uleb128 0x49
 1003 00cc 13       		.uleb128 0x13
 1004 00cd 00       		.byte	0
 1005 00ce 00       		.byte	0
 1006 00cf 0E       		.uleb128 0xe
 1007 00d0 34       		.uleb128 0x34
 1008 00d1 00       		.byte	0
 1009 00d2 03       		.uleb128 0x3
 1010 00d3 0E       		.uleb128 0xe
 1011 00d4 3A       		.uleb128 0x3a
 1012 00d5 0B       		.uleb128 0xb
 1013 00d6 3B       		.uleb128 0x3b
 1014 00d7 0B       		.uleb128 0xb
 1015 00d8 49       		.uleb128 0x49
 1016 00d9 13       		.uleb128 0x13
 1017 00da 3F       		.uleb128 0x3f
 1018 00db 19       		.uleb128 0x19
 1019 00dc 3C       		.uleb128 0x3c
 1020 00dd 19       		.uleb128 0x19
 1021 00de 00       		.byte	0
 1022 00df 00       		.byte	0
 1023 00e0 00       		.byte	0
 1024              		.section	.debug_aranges,"",%progbits
 1025 0000 64000000 		.4byte	0x64
 1026 0004 0200     		.2byte	0x2
 1027 0006 00000000 		.4byte	.Ldebug_info0
 1028 000a 04       		.byte	0x4
 1029 000b 00       		.byte	0
 1030 000c 0000     		.2byte	0
 1031 000e 0000     		.2byte	0
 1032 0010 00000000 		.4byte	.LFB2
 1033 0014 C0000000 		.4byte	.LFE2-.LFB2
 1034 0018 00000000 		.4byte	.LFB3
 1035 001c 34000000 		.4byte	.LFE3-.LFB3
 1036 0020 00000000 		.4byte	.LFB4
 1037 0024 38000000 		.4byte	.LFE4-.LFB4
 1038 0028 00000000 		.4byte	.LFB5
 1039 002c 34000000 		.4byte	.LFE5-.LFB5
 1040 0030 00000000 		.4byte	.LFB6
 1041 0034 34000000 		.4byte	.LFE6-.LFB6
 1042 0038 00000000 		.4byte	.LFB7
 1043 003c 34000000 		.4byte	.LFE7-.LFB7
 1044 0040 00000000 		.4byte	.LFB8
 1045 0044 22000000 		.4byte	.LFE8-.LFB8
 1046 0048 00000000 		.4byte	.LFB9
 1047 004c 1C000000 		.4byte	.LFE9-.LFB9
 1048 0050 00000000 		.4byte	.LFB10
 1049 0054 1C000000 		.4byte	.LFE10-.LFB10
 1050 0058 00000000 		.4byte	.LFB11
 1051 005c 38000000 		.4byte	.LFE11-.LFB11
 1052 0060 00000000 		.4byte	0
 1053 0064 00000000 		.4byte	0
 1054              		.section	.debug_ranges,"",%progbits
 1055              	.Ldebug_ranges0:
 1056 0000 00000000 		.4byte	.LFB2
ARM GAS  C:\Users\owono\AppData\Local\Temp\cc0srShD.s 			page 33


 1057 0004 C0000000 		.4byte	.LFE2
 1058 0008 00000000 		.4byte	.LFB3
 1059 000c 34000000 		.4byte	.LFE3
 1060 0010 00000000 		.4byte	.LFB4
 1061 0014 38000000 		.4byte	.LFE4
 1062 0018 00000000 		.4byte	.LFB5
 1063 001c 34000000 		.4byte	.LFE5
 1064 0020 00000000 		.4byte	.LFB6
 1065 0024 34000000 		.4byte	.LFE6
 1066 0028 00000000 		.4byte	.LFB7
 1067 002c 34000000 		.4byte	.LFE7
 1068 0030 00000000 		.4byte	.LFB8
 1069 0034 22000000 		.4byte	.LFE8
 1070 0038 00000000 		.4byte	.LFB9
 1071 003c 1C000000 		.4byte	.LFE9
 1072 0040 00000000 		.4byte	.LFB10
 1073 0044 1C000000 		.4byte	.LFE10
 1074 0048 00000000 		.4byte	.LFB11
 1075 004c 38000000 		.4byte	.LFE11
 1076 0050 00000000 		.4byte	0
 1077 0054 00000000 		.4byte	0
 1078              		.section	.debug_line,"",%progbits
 1079              	.Ldebug_line0:
 1080 0000 53010000 		.section	.debug_str,"MS",%progbits,1
 1080      02006D00 
 1080      00000201 
 1080      FB0E0D00 
 1080      01010101 
 1081              	.LASF6:
 1082 0000 6C6F6E67 		.ascii	"long long int\000"
 1082      206C6F6E 
 1082      6720696E 
 1082      7400
 1083              	.LASF15:
 1084 000e 72656733 		.ascii	"reg32\000"
 1084      3200
 1085              	.LASF37:
 1086 0014 55415254 		.ascii	"UART_IntrTxMask\000"
 1086      5F496E74 
 1086      7254784D 
 1086      61736B00 
 1087              	.LASF21:
 1088 0024 55415254 		.ascii	"UART_UartSetRxAddressMask\000"
 1088      5F556172 
 1088      74536574 
 1088      52784164 
 1088      64726573 
 1089              	.LASF31:
 1090 003e 55415254 		.ascii	"UART_UartDisableCts\000"
 1090      5F556172 
 1090      74446973 
 1090      61626C65 
 1090      43747300 
 1091              	.LASF26:
 1092 0052 73747269 		.ascii	"string\000"
 1092      6E6700
 1093              	.LASF36:
ARM GAS  C:\Users\owono\AppData\Local\Temp\cc0srShD.s 			page 34


 1094 0059 503A5C53 		.ascii	"P:\\SIKA\\Sika-Picore_lokal\\Cypress\\Frequency_Mea"
 1094      494B415C 
 1094      53696B61 
 1094      2D506963 
 1094      6F72655F 
 1095 0088 73757265 		.ascii	"surement_Using_PSoC4_BLE\\Frequency_Measurement_Usi"
 1095      6D656E74 
 1095      5F557369 
 1095      6E675F50 
 1095      536F4334 
 1096 00ba 6E675F50 		.ascii	"ng_PSoC4_BLE\\Frequency_Measurement_Using_PSoC4_BLE"
 1096      536F4334 
 1096      5F424C45 
 1096      5C467265 
 1096      7175656E 
 1097 00ec 2E637964 		.ascii	".cydsn\000"
 1097      736E00
 1098              	.LASF25:
 1099 00f3 55415254 		.ascii	"UART_UartPutString\000"
 1099      5F556172 
 1099      74507574 
 1099      53747269 
 1099      6E6700
 1100              	.LASF11:
 1101 0106 666C6F61 		.ascii	"float\000"
 1101      7400
 1102              	.LASF1:
 1103 010c 756E7369 		.ascii	"unsigned char\000"
 1103      676E6564 
 1103      20636861 
 1103      7200
 1104              	.LASF13:
 1105 011a 63686172 		.ascii	"char8\000"
 1105      3800
 1106              	.LASF18:
 1107 0120 55415254 		.ascii	"UART_UartPostEnable\000"
 1107      5F556172 
 1107      74506F73 
 1107      74456E61 
 1107      626C6500 
 1108              	.LASF5:
 1109 0134 6C6F6E67 		.ascii	"long unsigned int\000"
 1109      20756E73 
 1109      69676E65 
 1109      6420696E 
 1109      7400
 1110              	.LASF19:
 1111 0146 55415254 		.ascii	"UART_UartStop\000"
 1111      5F556172 
 1111      7453746F 
 1111      7000
 1112              	.LASF3:
 1113 0154 73686F72 		.ascii	"short unsigned int\000"
 1113      7420756E 
 1113      7369676E 
 1113      65642069 
 1113      6E7400
ARM GAS  C:\Users\owono\AppData\Local\Temp\cc0srShD.s 			page 35


 1114              	.LASF28:
 1115 0167 55415254 		.ascii	"UART_UartPutCRLF\000"
 1115      5F556172 
 1115      74507574 
 1115      43524C46 
 1115      00
 1116              	.LASF23:
 1117 0178 61646472 		.ascii	"addressMask\000"
 1117      6573734D 
 1117      61736B00 
 1118              	.LASF12:
 1119 0184 646F7562 		.ascii	"double\000"
 1119      6C6500
 1120              	.LASF20:
 1121 018b 55415254 		.ascii	"UART_UartSetRxAddress\000"
 1121      5F556172 
 1121      74536574 
 1121      52784164 
 1121      64726573 
 1122              	.LASF34:
 1123 01a1 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 1123      4320342E 
 1123      392E3320 
 1123      32303135 
 1123      30333033 
 1124 01d4 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 1124      20726576 
 1124      6973696F 
 1124      6E203232 
 1124      31323230 
 1125 0207 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 1125      66756E63 
 1125      74696F6E 
 1125      2D736563 
 1125      74696F6E 
 1126              	.LASF9:
 1127 022f 75696E74 		.ascii	"uint16\000"
 1127      313600
 1128              	.LASF10:
 1129 0236 75696E74 		.ascii	"uint32\000"
 1129      333200
 1130              	.LASF8:
 1131 023d 756E7369 		.ascii	"unsigned int\000"
 1131      676E6564 
 1131      20696E74 
 1131      00
 1132              	.LASF17:
 1133 024a 55415254 		.ascii	"UART_UartInit\000"
 1133      5F556172 
 1133      74496E69 
 1133      7400
 1134              	.LASF22:
 1135 0258 61646472 		.ascii	"address\000"
 1135      65737300 
 1136              	.LASF7:
 1137 0260 6C6F6E67 		.ascii	"long long unsigned int\000"
 1137      206C6F6E 
ARM GAS  C:\Users\owono\AppData\Local\Temp\cc0srShD.s 			page 36


 1137      6720756E 
 1137      7369676E 
 1137      65642069 
 1138              	.LASF33:
 1139 0277 706F6C61 		.ascii	"polarity\000"
 1139      72697479 
 1139      00
 1140              	.LASF27:
 1141 0280 62756649 		.ascii	"bufIndex\000"
 1141      6E646578 
 1141      00
 1142              	.LASF16:
 1143 0289 73697A65 		.ascii	"sizetype\000"
 1143      74797065 
 1143      00
 1144              	.LASF29:
 1145 0292 74784461 		.ascii	"txDataByte\000"
 1145      74614279 
 1145      746500
 1146              	.LASF35:
 1147 029d 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\UART_UART.c\000"
 1147      6E657261 
 1147      7465645F 
 1147      536F7572 
 1147      63655C50 
 1148              	.LASF30:
 1149 02c2 55415254 		.ascii	"UART_UartEnableCts\000"
 1149      5F556172 
 1149      74456E61 
 1149      626C6543 
 1149      747300
 1150              	.LASF14:
 1151 02d5 63686172 		.ascii	"char\000"
 1151      00
 1152              	.LASF2:
 1153 02da 73686F72 		.ascii	"short int\000"
 1153      7420696E 
 1153      7400
 1154              	.LASF32:
 1155 02e4 55415254 		.ascii	"UART_UartSetCtsPolarity\000"
 1155      5F556172 
 1155      74536574 
 1155      43747350 
 1155      6F6C6172 
 1156              	.LASF4:
 1157 02fc 6C6F6E67 		.ascii	"long int\000"
 1157      20696E74 
 1157      00
 1158              	.LASF24:
 1159 0305 6D617463 		.ascii	"matchReg\000"
 1159      68526567 
 1159      00
 1160              	.LASF0:
 1161 030e 7369676E 		.ascii	"signed char\000"
 1161      65642063 
 1161      68617200 
 1162              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
ARM GAS  C:\Users\owono\AppData\Local\Temp\cc0srShD.s 			page 37


